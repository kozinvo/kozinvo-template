*,::after,::before{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box}a{text-decoration:none;color:inherit}li,ol,ul{list-style:none}img{vertical-align:top}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}body,html{line-height:1;height:100%}html{scroll-behavior:smooth}body{font:1rem/146.875% "Montserrat",Arial,Helvetica,sans-serif;background:#fff;color:#21243d}button{background:inherit;cursor:pointer;border:0}button,input,textarea{font:inherit inherit inherit;color:inherit}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Regular.woff2) format("woff2"),url(../font/Montserrat-Regular.woff) format("woff"),url(../font/Montserrat-Regular.ttf) format("ttf"),url(../font/Montserrat-Regular.eot) format("eot");font-weight:400}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Bold.woff2) format("woff2"),url(../font/Montserrat-Bold.woff) format("woff"),url(../font/Montserrat-Bold.ttf) format("ttf"),url(../font/Montserrat-Bold.eot) format("eot");font-weight:700}.menu-open body{overflow:hidden}.wrapper{overflow:clip;min-height:100%;display:grid;grid-template-rows:auto 1fr auto}[class*=__container]{max-width:76.875rem;padding-inline:.9375rem;margin-inline:auto}section:not(:last-child):not(:first-child){margin-bottom:80px}.section-title{font-size:40px;margin-bottom:30px}.btn,.footer__container svg{-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s}.btn{background:#ff6464;color:#fff;border:2px solid #ff6464;padding:8px 20px;display:-webkit-box;display:-ms-flexbox;display:flex;width:-webkit-max-content;width:-moz-max-content;width:max-content;border-radius:2px}.btn:hover{color:#ff6464;background:#fff}.footer__info{text-align:center}.footer__container{display:-webkit-box;display:-ms-flexbox;height:80px;padding-block:20px;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.footer__container svg{height:100%;padding-inline:10px}.footer__container svg:hover,.header__logo svg:hover g path{fill:#ff6464}.header{position:sticky;top:0;left:0;z-index:2;width:100%;background:#fff}.header__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:15px;min-height:80px}.header__logo{position:relative;z-index:2}.header__logo svg{height:60px}.header__logo svg g path{-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s}.menu__list{font-size:clamp(1.25rem,1vw + .75rem,1.5rem);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-column-gap:30px;-moz-column-gap:30px;column-gap:30px;row-gap:5px;-ms-flex-wrap:wrap;flex-wrap:wrap}.menu__link{position:relative;-webkit-transition:opacity .3s,color .3s;-o-transition:opacity .3s,color .3s;transition:opacity .3s,color .3s}.menu__link::after{position:absolute;content:"";left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);bottom:-5px;display:block;width:0;height:2px;background:#ff6464;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.menu__link:hover{color:#ff6464;opacity:.7}.menu__link:hover:after{width:100%;opacity:.7}.icon-menu{display:none}.home h1{margin:0;font-weight:700;font-size:clamp(2rem,3vw + 1rem,2.75rem);line-height:136.363%}.home__container,.home__content{display:-webkit-box;display:-ms-flexbox;display:flex}.home__container{height:calc(100vh - 80px);-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.home__content{-webkit-box-flex:0;-ms-flex:0 1 50%;flex:0 1 50%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:40px}.home__img{-webkit-box-flex:0;-ms-flex:0 1 30%;flex:0 1 30%;border-radius:50%}.home__img img{-o-object-fit:contain;object-fit:contain;-o-object-position:center;object-position:center;width:100%}.miniapps{height:300px;background:#edf7fa;padding-top:80px}.project{border-bottom:1px solid #e0e0e0;padding-bottom:15px;display:-webkit-box;display:-ms-flexbox;display:flex;gap:20px}.project:not(:first-child){padding-top:30px}.project__img{max-height:300px;overflow:hidden;border-radius:10px;-webkit-box-flex:1;-ms-flex:1 1 50%;flex:1 1 50%}.project__img:hover img{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}.project__img img{height:100%;width:100%;-o-object-fit:cover;object-fit:cover;-o-object-position:top center;object-position:top center;-webkit-transition:-webkit-transform .3s;-o-transition:transform .3s;transition:transform .3s;transition:transform .3s,-webkit-transform .3s}.project__content{-ms-flex-negative:2;flex-shrink:2;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;row-gap:20px}.project__title{font-size:1.875rem;line-height:146.666667%}.project__info{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-column-gap:20px;-moz-column-gap:20px;column-gap:20px}.project__year{background:#21243d;font-weight:700;font-size:18px;color:#fff;border-radius:16px;padding:4px 8px}.project__link{font-size:20px;line-height:145%;-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s}.project__link:hover{color:#ff6464}.skills{background:#edf7fa;padding-block:80px}.skills__wrapper{display:grid;grid-template-columns:repeat(auto-fill,minmax(min(100%,280px),1fr));grid-auto-rows:-webkit-max-content;grid-auto-rows:max-content;gap:2rem}.skill{background:#fff;border-radius:8px;padding:20px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;row-gap:12px;text-align:center;-webkit-transition:-webkit-box-shadow .3s;-o-transition:box-shadow .3s;transition:box-shadow .3s;transition:box-shadow .3s,-webkit-box-shadow .3s;overflow:hidden}.skill:hover{-webkit-box-shadow:0 10px 15px -3px rgba(0,0,0,.1);box-shadow:0 10px 15px -3px rgba(0,0,0,.1)}.skill__title{font-weight:700;font-size:1.5rem}.skill__progress{height:140px;width:140px;background:conic-gradient(#ff6464 3.6deg,#edf7fa 0deg);-ms-flex-item-align:center;align-self:center;border-radius:50%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;font-size:30px}.skill__progress::before{background:#fff;content:"";position:absolute;height:100px;width:100px;border-radius:50%}.skill__progress,.skill__progress span{position:relative}.skill__info{overflow:hidden;-webkit-transition:.3s;-o-transition:.3s;transition:.3s;-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%);opacity:0}.skill:hover .skill__info{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);opacity:1}.useful__tabs{font-size:24px;background:#edf7fa;padding:0 20px 20px;-webkit-box-shadow:0 10px 15px -3px rgba(0,0,0,.1);box-shadow:0 10px 15px -3px rgba(0,0,0,.1)}.tab{height:300px;overflow:hidden}.tab__btns{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:60px;text-align:center}.tab__btns .active{color:#ff6464}.tab__btn{-webkit-box-flex:1;-ms-flex:1 0 calc(100%/var(--num-tab));flex:1 0 calc(100%/var(--num-tab));cursor:pointer}.tab__indicator{position:relative;left:0;height:3px;background:#ff6464;width:calc(100%/var(--num-tab));-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.tab__body{height:calc(100% - 60px);padding:20px 10px;position:relative}.tab__content{-webkit-transition:all .5s;-o-transition:all .5s;transition:all .5s;-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9);opacity:0;position:absolute}.tab__content.active{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1);opacity:1}.tab__content a{display:block;width:-webkit-max-content;width:-moz-max-content;width:max-content}.tab__content a:not(:last-child){margin-bottom:10px}@media (max-width:767.98px){.menu__list{position:fixed;width:100%;height:100%;top:0;left:-100%;-webkit-transition:left .3s;-o-transition:left .3s;transition:left .3s;padding:100px 15px 20px;background-color:#edf7fa;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:35px;overflow:auto}.menu__link{font-size:36px}.menu__link::after{display:none}.menu__link:hover{opacity:1}.menu-open .menu__list{left:0}.icon-menu{display:block;position:relative;z-index:2;width:30px;height:18px}.icon-menu::after,.icon-menu::before,.icon-menu__line{position:absolute;content:"";background-color:#000;width:100%;height:2px;left:0;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.icon-menu::before{top:0}.icon-menu::after{bottom:0}.icon-menu__line{top:calc(50% - 1px)}.menu-open .icon-menu::before{top:calc(50% - 1px);-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg)}.menu-open .icon-menu::after{bottom:calc(50% - 1px);-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.menu-open .icon-menu__line{left:50%;width:0}.home__container{padding-block:20px;-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:20px}.home__content,.home__img{-webkit-box-flex:0;-ms-flex:none;flex:none}.home__content{text-align:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:24px}.home__img{width:64%;max-width:360px}.project{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.project__img{width:70vw;-webkit-box-flex:1;-ms-flex:auto;flex:auto}}@media (max-width:575.98px){.project__img{width:100%;-webkit-box-flex:1;-ms-flex:auto;flex:auto}}@media (hover:none){.skill__info{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);opacity:1}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */