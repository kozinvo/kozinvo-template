*,::after,::before{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box}a{text-decoration:none;color:inherit}li,ol,ul{list-style:none}img{vertical-align:top}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}body,html{line-height:1;height:100%}html{scroll-behavior:smooth}body{font:1rem/146.875% "Montserrat",Arial,Helvetica,sans-serif;background:#fff;color:#21243d}button{background:inherit;cursor:pointer;border:0}button,input,textarea{font:inherit inherit inherit;color:inherit}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Regular.woff2) format("woff2"),url(../font/Montserrat-Regular.woff) format("woff"),url(../font/Montserrat-Regular.ttf) format("ttf"),url(../font/Montserrat-Regular.eot) format("eot")}@font-face{font-family:"Montserrat-Bold";src:url(../font/Montserrat-Bold.woff2) format("woff2"),url(../font/Montserrat-Bold.woff) format("woff"),url(../font/Montserrat-Bold.ttf) format("ttf"),url(../font/Montserrat-Bold.eot) format("eot")}.menu-open body{overflow:hidden}.wrapper{overflow:clip;min-height:100%;display:grid;grid-template-rows:auto 1fr auto}[class*=__container]{max-width:76.875rem;padding-inline:.9375rem;margin-inline:auto}section:not(:last-child):not(:first-child){margin-block:80px}.section-title{font-size:40px;margin-bottom:30px}.btn{background:#ff6464;-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s;color:#fff;border:2px solid #ff6464;padding:8px 20px;display:-webkit-box;display:-ms-flexbox;display:flex;width:-webkit-max-content;width:-moz-max-content;width:max-content;border-radius:2px}.btn:hover{color:#ff6464;background:#fff}.header{position:sticky;top:0;left:0;width:100%;background:#fff}.header__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:15px;min-height:80px}.header__logo{position:relative;z-index:10}.header__logo svg{height:60px}.header__logo svg g path{-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s}.header__logo svg:hover g path{fill:#ff6464}.menu__list{font-size:1.5rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-column-gap:40px;-moz-column-gap:40px;column-gap:40px;row-gap:5px;-ms-flex-wrap:wrap;flex-wrap:wrap}.menu__link{position:relative;-webkit-transition:opacity .3s,color .3s;-o-transition:opacity .3s,color .3s;transition:opacity .3s,color .3s}.menu__link::after{position:absolute;content:"";left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);bottom:-5px;display:block;width:0;height:2px;background:#ff6464;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.menu__link:hover{color:#ff6464;opacity:.7}.menu__link:hover:after{width:100%;opacity:.7}.icon-menu{display:none}.home h1{font:clamp(2rem,3vw + 1rem,2.75rem)/136.363% "Montserrat-Bold",Arial,serif;margin:0}.home__container,.home__content{display:-webkit-box;display:-ms-flexbox;display:flex}.home__container{height:calc(100vh - 80px);-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.home__content{-webkit-box-flex:0;-ms-flex:0 1 50%;flex:0 1 50%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:40px}.home__img{-webkit-box-flex:0;-ms-flex:0 1 30%;flex:0 1 30%;border-radius:50%}.home__img img{-o-object-fit:contain;object-fit:contain;-o-object-position:center;object-position:center;width:100%}@media (max-width:797.98px){.menu__list{position:fixed;width:100%;height:100%;top:0;left:-100%;-webkit-transition:left .3s;-o-transition:left .3s;transition:left .3s;padding:100px 15px 20px;background-color:#edf7fa;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:35px;overflow:auto}.menu__link{font-size:36px}.menu__link::after{display:none}.menu__link:hover{opacity:1}.menu-open .menu__list{left:0}.icon-menu{display:block;position:relative;z-index:10;width:30px;height:18px}.icon-menu::after,.icon-menu::before,.icon-menu__line{position:absolute;content:"";background-color:#000;width:100%;height:2px;left:0;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.icon-menu::before{top:0}.icon-menu::after{bottom:0}.icon-menu__line{top:calc(50% - 1px)}.menu-open .icon-menu::before{top:calc(50% - 1px);-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg)}.menu-open .icon-menu::after{bottom:calc(50% - 1px);-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.menu-open .icon-menu__line{left:50%;width:0}}@media (max-width:767.98px){.home__container{padding-block:20px;-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:20px}.home__content,.home__img{-webkit-box-flex:0;-ms-flex:none;flex:none}.home__content{text-align:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:24px}.home__img{width:64%;max-width:360px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsZWFyLnNjc3MiLCJtYWluLm1pbi5jc3MiLCJtYWluLnNjc3MiLCJtYWluLmNzcyIsImZvbnRzLnNjc3MiLCJibG9jay9oZWFkZXIuc2NzcyIsImJsb2NrL2hvbWUuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDLENDQ0EsTyxDQUNBLFEsQ0RDRSxTLENBQ0EsUSxDQUNBLDZCLENDQ0EscUIsQ0RFRixDLENBQ0Usb0IsQ0FDQSxhLENDTUYsRSxDQURBLEUsQ0RGQSxFLENBR0UsZSxDQUdGLEcsQ0FDRSxrQixDQUdGLEUsQ0NFQSxFLENBQ0EsRSxDQUNBLEUsQ0FDQSxFLENBQ0EsRSxDREFFLGlCLENBQ0EsbUIsQ0NTRixJLENETkEsSSxDQU1FLGEsQ0FDQSxXLENBUEYsSSxDQUNFLHNCLENDS0YsSSxDQ3JCRSwwRCxDQUNBLGUsQ0FDQSxhLENGdUJGLE0sQ0FDRSxrQixDQUNBLGMsQ0FDQSxRLENBSEYsTSxDQ1FBLEssQ0FDQSxRLENEQUUsNEIsQ0FDQSxhLENHR0YsV0ZFRSx3QixDR3pERixrTixBRDREQSxXQ3BEQSw2QixDQUNFLHNNRDhERixlLENGRUUsZSxDRUVGLFEsQ0ZFRSxhLENDakRGLGUsQ0FDRSxZLENBQ0EsZ0MsQ0NvREYsb0IsQ0ZFRSxtQixDQ2pERix1QixDQUNFLGtCLENDb0RGLFlBQUEsVyxNQUFBLGEsQ0ZFRSxpQixDRUVGLGMsQ0ZFRSxjLENDakRGLGtCLENDb0RBLEksQ0ZFRSxrQixDQ2pERiwwQixDQUNFLHFCLENBQUEsa0IsQ0FBQSxVLENBQ0Esd0IsQ0FDQSxnQixDQUNBLG1CLENBQ0EsbUIsQ0FDQSxZLENBQUEseUIsQ0FBQSxzQixDQUNBLGlCLENBQUEsaUIsQ0NtREYsVSxDRGhERSxhLENBQ0UsZSxDRDJESixPLENJekhBLGUsQ0FDRSxLLENBQ0EsTSxDQUNBLFUsQ0FFQSxlLENBR0Esa0IsQ0FDRSxtQixDQUFBLG1CLENBQUEsWSxDQUNBLHdCLENKNEhGLHFCLENBQ0Esa0IsQ0k1SEUsd0IsQ0o4SEYscUIsQ0FDQSw2QixDSTlIRSxRLENBQ0EsZSxDSmtJSixhLENJN0hJLGlCLENGa0hKLFUsQ0FHQSxpQixDRWhITSxXLENKaUlOLHdCLENFZEEsMEIsQ0UvR00scUIsQ0FDRSxrQixDQVNOLDhCLENBQ0UsWSxDSjRISixXLENJMUhJLGdCLENKNEhGLG1CLENBQ0EsbUIsQ0k1SEUsWSxDSjhIRix3QixDQUNBLHFCLENJOUhFLGtCLENBQ0EsdUIsQ0pnSUYsb0IsQ0VyQkYsZSxDRXhHRSxXLENBQ0Usa0IsQ0FDQSxjLENGMEdKLFcsQ0V4R0ksaUIsQ0FDRSx3QyxDQUNBLG1DLENBQ0EsZ0MsQ0pvSU4sa0IsQ0lsSU0saUIsQ0FDQSxVLENBQ0EsUSxDQUNBLGtDLENBQ0EsOEIsQ0FDQSwwQixDQUFBLFcsQ0FBQSxhLENGMEdOLE8sQ0V2R0ksVSxDQUNFLGtCLENBQ0Esc0IsQ0Z5R04saUIsQ0V2R00sYyxDRjJHTixpQixDRjZCRSxhLENJOUhBLFUsQ0prSUYsdUIsQ0kzSEEsVSxDQUVJLFUsQ0o4SEosVSxDQUNFLFksQ0FHRixRLENBQ0UsMEUsQ0FDQSxRLENBR0YsZ0IsQ0FhQSxjLENFN0JFLG1CLENFeEZBLG1CLENKMkhBLFksQ0FuQkYsZ0IsQ0FDRSx5QixDRTdCQSx3QixDRTdGRSxxQixDSmdJRixrQixDRWhDQSx3QixDRTdGSSxxQixDSmdJSiw2QixDQUdGLGMsQ0VoQ0Usa0IsQ0V6RkEsZ0IsQ0o0SEEsWSxDQUlBLDJCLENBQ0EsNEIsQ0FDQSx5QixDQUNBLHFCLENFaENBLHVCLENFdkZBLG9CLENKMEhBLHNCLENBQ0EsUSxDQUdGLFUsQ0FDRSxrQixDQUNBLGdCLENBQ0EsWSxDQUNBLGlCLENBR0YsYyxDSXhIRSxxQixDSjBIQSxrQixDRWxDQSx5QixDRXBGQSxzQixDSnlIQSxVLENBT0YsNEJBQ0UsVyxDQUNFLGMsQ0VwQ0YsVSxDRWhGRSxXLENBQ0UsSyxDQUNBLFUsQ0p1SEYsMkIsQ0FDQSxzQixDRXRDRixtQixDRS9FRSx1QixDQUNFLHdCLENBQ0EsMkIsQ0ZpRkosNEIsQ0FDRix5QixDR3BQRSxxQixDQUNFLFEsQ0FDQSxhLENId1BKLFcsQ0duUEUsYyxDQUVFLGtCLENBQUEsWSxDTGdTRixpQixDSzlSRSxTLENIcVBKLHNCLENHbFBFLE0sQ0xtU0EsVSxDS2pTRSxhLENBQUEsaUIsQ0FBQSxVLENBQ0EsVSxDQUFBLFcsQ0wwU0YsaUIsQ0FEQSxrQixDS3hTRSxnQixDQUNBLGlCLENIb1BKLFUsQ0dqUEUscUIsQ0FDRSxVLENMeVNBLFUsQ0FDQSxNLENLelNBLHNCLENIbVBKLGlCLENHalBJLGMsQ0FFRSxrQixDTDRTRixLLENBR0YsaUIsQ0t6U0YsUSxDTDZTRSxnQixDS3hTSSxtQixDTDRTSiw2QixDQUNFLG1CLENBQ0EsZ0MsQ0s1U0UsNEIsQ0grT0osd0IsQ0ZrRUEsNEIsQ0FDRSxzQixDSzdTRSwrQixDQUNBLDJCLENMK1NGLHVCLENFaEVGLDJCLENHM09FLFEsQ0FDRSxTLEFMdVROLDRCRXBFQSxnQixDRnNFSSxrQixDRXBFSCwyQixDRnNFRyw2QixDRXBFSixpQyxDRnNFSSw2QixDRXBFSix1QixDRnNFSSxvQixDRXBFSixzQixDRnNFSSxRLENFbEVKLGMsQ0ZnRkUsVSxDQUNFLGtCLENBQ0EsYSxDQUNBLFMsQ0VuRkosYyxDQUlBLGlCLENGc0VJLHdCLENBQ0EscUIsQ0FDQSxrQixDQUNBLFEsQ0FHRixVLENBSUUsUyxDQUNBLGlCIiwiZmlsZSI6Im1haW4ubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiosXG4qOjphZnRlcixcbio6OmJlZm9yZSB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6IGluaGVyaXRcbn1cblxudWwsXG5vbCxcbmxpIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuaW1nIHtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuaHRtbCB7XG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xufVxuXG5odG1sLFxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbmJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyOiBub25lO1xufVxuXG5idXR0b24sXG5pbnB1dCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufSIsIiosXG4qOjphZnRlcixcbio6OmJlZm9yZSB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxudWwsXG5vbCxcbmxpIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuaW1nIHtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuaHRtbCB7XG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xufVxuXG5odG1sLFxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbmJ1dHRvbiB7XG4gIGJhY2tncm91bmQ6IGluaGVyaXQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyOiBub25lO1xufVxuXG5idXR0b24sXG5pbnB1dCxcbnRleHRhcmVhIHtcbiAgZm9udDogaW5oZXJpdCBpbmhlcml0IGluaGVyaXQ7XG4gIGNvbG9yOiBpbmhlcml0O1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1SZWd1bGFyLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQtUmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1SZWd1bGFyLnR0ZlwiKSBmb3JtYXQoXCJ0dGZcIiksIHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1SZWd1bGFyLmVvdFwiKSBmb3JtYXQoXCJlb3RcIik7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0LUJvbGRcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQtQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQtQm9sZC50dGZcIikgZm9ybWF0KFwidHRmXCIpLCB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQtQm9sZC5lb3RcIikgZm9ybWF0KFwiZW90XCIpO1xufVxuXG5ib2R5IHtcbiAgZm9udDogMXJlbS8xNDYuODc1JSBcIk1vbnRzZXJyYXRcIiwgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgY29sb3I6ICMyMTI0M0Q7XG59XG5cbi5tZW51LW9wZW4gYm9keSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi53cmFwcGVyIHtcbiAgb3ZlcmZsb3c6IGNsaXA7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byAxZnIgYXV0bztcbn1cblxuW2NsYXNzKj1fX2NvbnRhaW5lcl0ge1xuICBtYXgtd2lkdGg6IDc2Ljg3NXJlbTtcbiAgcGFkZGluZy1pbmxpbmU6IDAuOTM3NXJlbTtcbiAgbWFyZ2luLWlubGluZTogYXV0bztcbn1cblxuc2VjdGlvbjpub3QoOmxhc3QtY2hpbGQpOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgbWFyZ2luLWJsb2NrOiA4MHB4O1xufVxuXG4uc2VjdGlvbi10aXRsZSB7XG4gIGZvbnQtc2l6ZTogNDBweDtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbn1cblxuLmJ0biB7XG4gIGJhY2tncm91bmQ6ICNGRjY0NjQ7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gIC1vLXRyYW5zaXRpb246IGFsbCAwLjNzO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgY29sb3I6ICNmZmY7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNGRjY0NjQ7XG4gIHBhZGRpbmc6IDhweCAyMHB4O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiAtd2Via2l0LW1heC1jb250ZW50O1xuICB3aWR0aDogLW1vei1tYXgtY29udGVudDtcbiAgd2lkdGg6IG1heC1jb250ZW50O1xuICBib3JkZXItcmFkaXVzOiAycHg7XG59XG5cbi5idG46aG92ZXIge1xuICBjb2xvcjogI0ZGNjQ2NDtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbn1cblxuLmhlYWRlciB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBnYXA6IDE1cHg7XG4gIG1pbi1oZWlnaHQ6IDgwcHg7XG59XG5cbi5oZWFkZXJfX2xvZ28ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDEwO1xufVxuXG4uaGVhZGVyX19sb2dvIHN2ZyB7XG4gIGhlaWdodDogNjBweDtcbn1cblxuLmhlYWRlcl9fbG9nbyBzdmcgZyBwYXRoIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgLW8tdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xufVxuXG4uaGVhZGVyX19sb2dvIHN2Zzpob3ZlciBnIHBhdGgge1xuICBmaWxsOiAjRkY2NDY0O1xufVxuXG4ubWVudV9fbGlzdCB7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC13ZWJraXQtY29sdW1uLWdhcDogNDBweDtcbiAgLW1vei1jb2x1bW4tZ2FwOiA0MHB4O1xuICBjb2x1bW4tZ2FwOiA0MHB4O1xuICByb3ctZ2FwOiA1cHg7XG4gIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cblxuLm1lbnVfX2xpbmsge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzLCBjb2xvciAwLjNzO1xuICAtby10cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MsIGNvbG9yIDAuM3M7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcywgY29sb3IgMC4zcztcbn1cblxuLm1lbnVfX2xpbms6OmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiBcIlwiO1xuICBsZWZ0OiA1MCU7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIGJvdHRvbTogLTVweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAwO1xuICBoZWlnaHQ6IDJweDtcbiAgYmFja2dyb3VuZDogI0ZGNjQ2NDtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAwLjNzO1xuICAtby10cmFuc2l0aW9uOiAwLjNzO1xuICB0cmFuc2l0aW9uOiAwLjNzO1xufVxuXG4ubWVudV9fbGluazpob3ZlciB7XG4gIGNvbG9yOiAjRkY2NDY0O1xuICBvcGFjaXR5OiAwLjc7XG59XG5cbi5tZW51X19saW5rOmhvdmVyOmFmdGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG9wYWNpdHk6IDAuNztcbn1cblxuLmljb24tbWVudSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5ob21lIGgxIHtcbiAgZm9udDogY2xhbXAoMnJlbSwgM3Z3ICsgMXJlbSwgMi43NXJlbSkvMTM2LjM2MyUgXCJNb250c2VycmF0LUJvbGRcIiwgQXJpYWwsIHNlcmlmO1xuICBtYXJnaW46IDA7XG59XG5cbi5ob21lX19jb250YWluZXIge1xuICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA4MHB4KTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5ob21lX19jb250ZW50IHtcbiAgLXdlYmtpdC1ib3gtZmxleDogMDtcbiAgLW1zLWZsZXg6IDAgMSA1MCU7XG4gIGZsZXg6IDAgMSA1MCU7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGdhcDogNDBweDtcbn1cblxuLmhvbWVfX2ltZyB7XG4gIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gIC1tcy1mbGV4OiAwIDEgMzAlO1xuICBmbGV4OiAwIDEgMzAlO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG59XG5cbi5ob21lX19pbWcgaW1nIHtcbiAgLW8tb2JqZWN0LWZpdDogY29udGFpbjtcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcbiAgLW8tb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XG4gIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbn1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3OTcuOThweCkge1xuICAubWVudV9fbGlzdCB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogLTEwMCU7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBsZWZ0IDAuM3M7XG4gICAgLW8tdHJhbnNpdGlvbjogbGVmdCAwLjNzO1xuICAgIHRyYW5zaXRpb246IGxlZnQgMC4zcztcbiAgICBwYWRkaW5nOiAxMDBweCAxNXB4IDIwcHggMTVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRURGN0ZBO1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDM1cHg7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gIH1cblxuICAubWVudV9fbGluayB7XG4gICAgZm9udC1zaXplOiAzNnB4O1xuICB9XG5cbiAgLm1lbnVfX2xpbms6OmFmdGVyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLm1lbnVfX2xpbms6aG92ZXIge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cblxuICAubWVudS1vcGVuIC5tZW51X19saXN0IHtcbiAgICBsZWZ0OiAwO1xuICB9XG5cbiAgLmljb24tbWVudSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IDEwO1xuICAgIHdpZHRoOiAzMHB4O1xuICAgIGhlaWdodDogMThweDtcbiAgfVxuXG4gIC5pY29uLW1lbnVfX2xpbmUsXG4gIC5pY29uLW1lbnU6OmJlZm9yZSxcbiAgLmljb24tbWVudTo6YWZ0ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgbGVmdDogMDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IDAuM3M7XG4gICAgLW8tdHJhbnNpdGlvbjogMC4zcztcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xuICB9XG5cbiAgLmljb24tbWVudTo6YmVmb3JlIHtcbiAgICB0b3A6IDA7XG4gIH1cblxuICAuaWNvbi1tZW51OjphZnRlciB7XG4gICAgYm90dG9tOiAwO1xuICB9XG5cbiAgLmljb24tbWVudV9fbGluZSB7XG4gICAgdG9wOiBjYWxjKDUwJSAtIDFweCk7XG4gIH1cblxuICAubWVudS1vcGVuIC5pY29uLW1lbnU6OmJlZm9yZSB7XG4gICAgdG9wOiBjYWxjKDUwJSAtIDFweCk7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gIH1cblxuICAubWVudS1vcGVuIC5pY29uLW1lbnU6OmFmdGVyIHtcbiAgICBib3R0b206IGNhbGMoNTAlIC0gMXB4KTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgfVxuXG4gIC5tZW51LW9wZW4gLmljb24tbWVudV9fbGluZSB7XG4gICAgbGVmdDogNTAlO1xuICAgIHdpZHRoOiAwO1xuICB9XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY3Ljk4cHgpIHtcbiAgLmhvbWVfX2NvbnRhaW5lciB7XG4gICAgcGFkZGluZy1ibG9jazogMjBweDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogcmV2ZXJzZTtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGdhcDogMjBweDtcbiAgfVxuXG4gIC5ob21lX19jb250ZW50IHtcbiAgICAtd2Via2l0LWJveC1mbGV4OiAwO1xuICAgIC1tcy1mbGV4OiBub25lO1xuICAgIGZsZXg6IG5vbmU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMjRweDtcbiAgfVxuXG4gIC5ob21lX19pbWcge1xuICAgIC13ZWJraXQtYm94LWZsZXg6IDA7XG4gICAgLW1zLWZsZXg6IG5vbmU7XG4gICAgZmxleDogbm9uZTtcbiAgICB3aWR0aDogNjQlO1xuICAgIG1heC13aWR0aDogMzYwcHg7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbU5zWldGeUxuTmpjM01pTENKdFlXbHVMbU56Y3lJc0ltWnZiblJ6TG5OamMzTWlMQ0p0WVdsdUxuTmpjM01pTENKaWJHOWpheTlvWldGa1pYSXVjMk56Y3lJc0ltSnNiMk5yTDJodmJXVXVjMk56Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUczdPMFZCUjBVc1ZVRkJRVHRGUVVOQkxGTkJRVUU3UlVGRFFTdzRRa0ZCUVR0VlFVRkJMSE5DUVVGQk8wRkRRMFk3TzBGRVJVRTdSVUZEUlN4eFFrRkJRVHRGUVVOQkxHTkJRVUU3UVVORFJqczdRVVJGUVRzN08wVkJSMFVzWjBKQlFVRTdRVU5EUmpzN1FVUkZRVHRGUVVORkxHMUNRVUZCTzBGRFEwWTdPMEZFUlVFN096czdPenRGUVUxRkxHdENRVUZCTzBWQlEwRXNiMEpCUVVFN1FVTkRSanM3UVVSRlFUdEZRVU5GTEhWQ1FVRkJPMEZEUTBZN08wRkVSVUU3TzBWQlJVVXNZMEZCUVR0RlFVTkJMRmxCUVVFN1FVTkRSanM3UVVSRlFUdEZRVU5GTEhsQ1FVRkJPMFZCUTBFc1pVRkJRVHRGUVVOQkxGbEJRVUU3UVVORFJqczdRVVJGUVRzN08wVkJSMFVzYjBKQlFVRTdSVUZEUVN4clFrRkJRVHRGUVVOQkxHTkJRVUU3UlVGRFFTeHZRa0ZCUVR0QlEwTkdPenRCUTNaRVFUdEZRVU5GTEhsQ1FVRkJPMFZCUTBFc05rNUJRVUU3UVVRd1JFWTdRVU53UkVFN1JVRkRSU3c0UWtGQlFUdEZRVU5CTEdsT1FVRkJPMEZFYzBSR08wRkZhRVJCTzBWQlEwVXNkVVJCUVVFN1JVRkRRU3hsUVVGQk8wVkJRMEVzY1VKQlFVRTdSVUZEUVN4blFrRm9RbGs3UlVGcFFsb3NZMEZtVnp0QlJtbEZZanM3UVVVdlEwRTdSVUZEUlN4blFrRkJRVHRCUm10RVJqczdRVVV2UTBFN1JVRkRSU3hqUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZEUVN4aFFVRkJPMFZCUTBFc2FVTkJRVUU3UVVaclJFWTdPMEZGTDBOQk8wVkJRMFVzYjBKQlFVRTdSVUZEUVN4NVFrRXpRbXRDTzBWQk5FSnNRaXh0UWtGQlFUdEJSbXRFUmpzN1FVVXZRMEU3UlVGRFJTeHJRa0ZCUVR0QlJtdEVSanM3UVVVdlEwRTdSVUZEUlN4bFFVRkJPMFZCUTBFc2JVSkJRVUU3UVVaclJFWTdPMEZGTDBOQk8wVkJRMFVzTkVKQlFVRTdSVUZCUVN4MVFrRkJRVHRGUVVGQkxHOUNRVUZCTzBWQlEwRXNWMEZvUkZrN1JVRnBSRm9zZVVKQk4wTmhPMFZCT0VOaUxIbENRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3h2UWtGQlFUdEZRVUZCTEc5Q1FVRkJPMFZCUVVFc1lVRkJRVHRGUVVOQkxEQkNRVUZCTzBWQlFVRXNkVUpCUVVFN1JVRkJRU3hyUWtGQlFUdEZRVU5CTEd0Q1FVRkJPMEZHYTBSR08wRkZhRVJGTzBWQlEwVXNZMEZ5UkZjN1JVRnpSRmdzWjBKQk1VUlZPMEZHTkVka096dEJSMnBJUVR0RlFVTkZMR2RDUVVGQk8wVkJRMEVzVFVGQlFUdEZRVU5CTEU5QlFVRTdSVUZGUVN4WFFVRkJPMFZCUTBFc1owSkVSRms3UVVadlNHUTdRVWRxU0VVN1JVRkRSU3h2UWtGQlFUdEZRVUZCTEc5Q1FVRkJPMFZCUVVFc1lVRkJRVHRGUVVOQkxIbENRVUZCTzAxQlFVRXNjMEpCUVVFN1ZVRkJRU3h0UWtGQlFUdEZRVU5CTEhsQ1FVRkJPMDFCUVVFc2MwSkJRVUU3VlVGQlFTdzRRa0ZCUVR0RlFVTkJMRk5CUVVFN1JVRkRRU3huUWtSRVdUdEJSbTlJYUVJN1FVZG9TRVU3UlVGRFJTeHJRa0ZCUVR0RlFVTkJMRmRCUVVFN1FVaHJTRW83UVVkb1NFazdSVUZEUlN4WlFVRkJPMEZJYTBoT08wRkhhRWhOTzBWQlEwVXNORUpCUVVFN1JVRkJRU3gxUWtGQlFUdEZRVUZCTEc5Q1FVRkJPMEZJYTBoU08wRkhMMGROTzBWQlEwVXNZVVJ1UWs4N1FVWnZTV1k3TzBGSGVFZEZPMFZCUTBVc2FVSkJRVUU3UlVGRFFTeHZRa0ZCUVR0RlFVRkJMRzlDUVVGQk8wVkJRVUVzWVVGQlFUdEZRVU5CTEhsQ1FVRkJPMDFCUVVFc2MwSkJRVUU3VlVGQlFTeHRRa0ZCUVR0RlFVTkJMSGRDUVVGQk8wdEJRVUVzY1VKQlFVRTdWVUZCUVN4blFrRkJRVHRGUVVOQkxGbEJRVUU3UlVGRFFTeHRRa0ZCUVR0TlFVRkJMR1ZCUVVFN1FVZ3lSMG83UVVkNFIwVTdSVUZEUlN4clFrRkJRVHRGUVVOQkxEUkRRVUZCTzBWQlFVRXNkVU5CUVVFN1JVRkJRU3h2UTBGQlFUdEJTREJIU2p0QlIzaEhTVHRGUVVORkxHdENRVUZCTzBWQlEwRXNWMEZCUVR0RlFVTkJMRk5CUVVFN1JVRkRRU3h0UTBGQlFUdE5RVUZCTEN0Q1FVRkJPMVZCUVVFc01rSkJRVUU3UlVGRFFTeFpRVUZCTzBWQlEwRXNZMEZCUVR0RlFVTkJMRkZCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzYlVKRWJFUlRPMFZEYlVSVUxIZENRVUZCTzBWQlFVRXNiVUpCUVVFN1JVRkJRU3huUWtGQlFUdEJTREJIVGp0QlIzWkhTVHRGUVVORkxHTkVka1JUTzBWRGQwUlVMRmxCUVVFN1FVaDVSMDQ3UVVkMlIwMDdSVUZEUlN4WFFVRkJPMFZCUTBFc1dVRkJRVHRCU0hsSFVqczdRVWRxUjBVN1JVRkRSU3hoUVVGQk8wRkliMGRLT3p0QlJ6bEdRVHRGUVVWSk8wbEJRMFVzWlVGQlFUdEpRVU5CTEZkQlFVRTdTVUZEUVN4WlFVRkJPMGxCUTBFc1RVRkJRVHRKUVVOQkxGZEJRVUU3U1VGRFFTdzJRa0ZCUVR0SlFVRkJMSGRDUVVGQk8wbEJRVUVzY1VKQlFVRTdTVUZEUVN3MlFrRkJRVHRKUVVOQkxIbENSSGhHVVR0SlEzbEdVaXcwUWtGQlFUdEpRVUZCTERaQ1FVRkJPMUZCUVVFc01FSkJRVUU3V1VGQlFTeHpRa0ZCUVR0SlFVTkJMRk5CUVVFN1NVRkRRU3hqUVVGQk8wVklaMGRLTzBWSE4wWkZPMGxCUTBVc1pVRkJRVHRGU0N0R1NqdEZSemRHU1R0SlFVTkZMR0ZCUVVFN1JVZ3JSazQ3UlVjMVJrazdTVUZEUlN4VlFVRkJPMFZJT0VaT08wVkhla1pCTzBsQlEwVXNUMEZCUVR0RlNESkdSanRGUjNoR1FUdEpRVU5GTEdOQlFVRTdTVUZEUVN4clFrRkJRVHRKUVVOQkxGZEJRVUU3U1VGRFFTeFhRVUZCTzBsQlEwRXNXVUZCUVR0RlNEQkdSanRGUjNaR1FUczdPMGxCUjBVc2EwSkJRVUU3U1VGRFFTeFhRVUZCTzBsQlEwRXNjMEpFT1VoVk8wbERLMGhXTEZkQlFVRTdTVUZEUVN4WFFVRkJPMGxCUTBFc1QwRkJRVHRKUVVOQkxIZENRVUZCTzBsQlFVRXNiVUpCUVVFN1NVRkJRU3huUWtGQlFUdEZTSGxHUmp0RlIzSkdRVHRKUVVORkxFMUJRVUU3UlVoMVJrWTdSVWR3UmtFN1NVRkRSU3hUUVVGQk8wVkljMFpHTzBWSGJrWkJPMGxCUTBVc2IwSkJRVUU3UlVoeFJrWTdSVWRxUmtVN1NVRkRSU3h2UWtGQlFUdEpRVU5CTEdsRFFVRkJPMUZCUVVFc05rSkJRVUU3V1VGQlFTeDVRa0ZCUVR0RlNHMUdTanRGUjJoR1JUdEpRVU5GTEhWQ1FVRkJPMGxCUTBFc1owTkJRVUU3VVVGQlFTdzBRa0ZCUVR0WlFVRkJMSGRDUVVGQk8wVklhMFpLTzBWSEwwVkZPMGxCUTBVc1UwRkJRVHRKUVVOQkxGRkJRVUU3UlVocFJrbzdRVUZEUmp0QlNYQlFSVHRGUVVORkxGTkJRVUU3UlVGRFFTdzBRMEZCUVR0RlFVTkJMREpEUVVGQk8wVkJRMEVzY1VKQlFVRTdRVXB6VUVvN1FVbHVVRVU3UlVGRFJTd3dRa0ZCUVR0RlFVTkJMRzlDUVVGQk8wVkJRVUVzYjBKQlFVRTdSVUZCUVN4aFFVRkJPMFZCUTBFc2VVSkJRVUU3VFVGQlFTeHpRa0ZCUVR0VlFVRkJMRzFDUVVGQk8wVkJRMEVzZVVKQlFVRTdUVUZCUVN4elFrRkJRVHRWUVVGQkxEaENRVUZCTzBGS2NWQktPMEZKYkZCRk8wVkJRMFVzYlVKQlFVRTdUVUZCUVN4cFFrRkJRVHRWUVVGQkxHRkJRVUU3UlVGRFFTeHZRa0ZCUVR0RlFVRkJMRzlDUVVGQk8wVkJRVUVzWVVGQlFUdEZRVU5CTERSQ1FVRkJPMFZCUVVFc05rSkJRVUU3VFVGQlFTd3dRa0ZCUVR0VlFVRkJMSE5DUVVGQk8wVkJRMEVzZDBKQlFVRTdUVUZCUVN4eFFrRkJRVHRWUVVGQkxIVkNRVUZCTzBWQlEwRXNVMEZCUVR0QlNtOVFTanRCU1dwUVJUdEZRVU5GTEcxQ1FVRkJPMDFCUVVFc2FVSkJRVUU3VlVGQlFTeGhRVUZCTzBWQlEwRXNhMEpCUVVFN1FVcHRVRW83UVVscVVFazdSVUZEUlN4elFrRkJRVHRMUVVGQkxHMUNRVUZCTzBWQlEwRXNNRUpCUVVFN1MwRkJRU3gxUWtGQlFUdEZRVU5CTEZkQlFVRTdRVXB0VUU0N08wRkpPVTlCTzBWQlJVazdTVUZGUlN4dFFrRkJRVHRKUVVOQkxEUkNRVUZCTzBsQlFVRXNPRUpCUVVFN1VVRkJRU3hyUTBGQlFUdFpRVUZCTERoQ1FVRkJPMGxCUTBFc2QwSkJRVUU3VVVGQlFTeHhRa0ZCUVR0WlFVRkJMSFZDUVVGQk8wbEJRMEVzVTBGQlFUdEZTaXRQU2p0RlNUVlBSVHRKUVVORkxHMUNRVUZCTzFGQlFVRXNZMEZCUVR0WlFVRkJMRlZCUVVFN1NVRkRRU3hyUWtGQlFUdEpRVU5CTEhsQ1FVRkJPMUZCUVVFc2MwSkJRVUU3V1VGQlFTeHRRa0ZCUVR0SlFVTkJMRk5CUVVFN1JVbzRUMG83UlVrelQwVTdTVUZEUlN4dFFrRkJRVHRSUVVGQkxHTkJRVUU3V1VGQlFTeFZRVUZCTzBsQlEwRXNWVUZCUVR0SlFVTkJMR2RDUVVGQk8wVktOazlLTzBGQlEwWTdRVUZEUVRzN1FVRkZRVHM3UTBGRlF6czdRVUZGUkRzN1FVRkZRVHM3UVVGRlFUczdRMEZGUXpzN1FVRkZSRHM3UVVGRlFUczdRVUZGUVNJc0ltWnBiR1VpT2lKdFlXbHVMbU56Y3lJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpb3NYRzRxT2pwaFpuUmxjaXhjYmlvNk9tSmxabTl5WlNCN1hHNGdJSEJoWkdScGJtYzZJREE3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnWW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEdGNibjFjYmx4dVlTQjdYRzRnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNiaUFnWTI5c2IzSTZJR2x1YUdWeWFYUmNibjFjYmx4dWRXd3NYRzV2YkN4Y2JteHBJSHRjYmlBZ2JHbHpkQzF6ZEhsc1pUb2dibTl1WlR0Y2JuMWNibHh1YVcxbklIdGNiaUFnZG1WeWRHbGpZV3d0WVd4cFoyNDZJSFJ2Y0R0Y2JuMWNibHh1YURFc1hHNW9NaXhjYm1nekxGeHVhRFFzWEc1b05TeGNibWcySUh0Y2JpQWdabTl1ZEMxemFYcGxPaUJwYm1obGNtbDBPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dhVzVvWlhKcGREdGNibjFjYmx4dWFIUnRiQ0I3WEc0Z0lITmpjbTlzYkMxaVpXaGhkbWx2Y2pvZ2MyMXZiM1JvTzF4dWZWeHVYRzVvZEcxc0xGeHVZbTlrZVNCN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lBeE8xeHVJQ0JvWldsbmFIUTZJREV3TUNVN1hHNTlYRzVjYm1KMWRIUnZiaUI3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklHbHVhR1Z5YVhRN1hHNGdJR04xY25OdmNqb2djRzlwYm5SbGNqdGNiaUFnWW05eVpHVnlPaUJ1YjI1bE8xeHVmVnh1WEc1aWRYUjBiMjRzWEc1cGJuQjFkQ3hjYm5SbGVIUmhjbVZoSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUdsdWFHVnlhWFE3WEc0Z0lHWnZiblF0YzJsNlpUb2dhVzVvWlhKcGREdGNiaUFnWTI5c2IzSTZJR2x1YUdWeWFYUTdYRzRnSUdadmJuUXRkMlZwWjJoME9pQnBibWhsY21sME8xeHVmU0lzSWlvc1hHNHFPanBoWm5SbGNpeGNiaW82T21KbFptOXlaU0I3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzRnSUcxaGNtZHBiam9nTUR0Y2JpQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2JuMWNibHh1WVNCN1hHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JpQWdZMjlzYjNJNklHbHVhR1Z5YVhRN1hHNTlYRzVjYm5Wc0xGeHViMndzWEc1c2FTQjdYRzRnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc1OVhHNWNibWx0WnlCN1hHNGdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQjBiM0E3WEc1OVhHNWNibWd4TEZ4dWFESXNYRzVvTXl4Y2JtZzBMRnh1YURVc1hHNW9OaUI3WEc0Z0lHWnZiblF0YzJsNlpUb2dhVzVvWlhKcGREdGNiaUFnWm05dWRDMTNaV2xuYUhRNklHbHVhR1Z5YVhRN1hHNTlYRzVjYm1oMGJXd2dlMXh1SUNCelkzSnZiR3d0WW1Wb1lYWnBiM0k2SUhOdGIyOTBhRHRjYm4xY2JseHVhSFJ0YkN4Y2JtSnZaSGtnZTF4dUlDQnNhVzVsTFdobGFXZG9kRG9nTVR0Y2JpQWdhR1ZwWjJoME9pQXhNREFsTzF4dWZWeHVYRzVpZFhSMGIyNGdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCcGJtaGxjbWwwTzF4dUlDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNGdJR0p2Y21SbGNqb2dibTl1WlR0Y2JuMWNibHh1WW5WMGRHOXVMRnh1YVc1d2RYUXNYRzUwWlhoMFlYSmxZU0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUJwYm1obGNtbDBPMXh1SUNCbWIyNTBMWE5wZW1VNklHbHVhR1Z5YVhRN1hHNGdJR052Ykc5eU9pQnBibWhsY21sME8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ2FXNW9aWEpwZER0Y2JuMWNibHh1UUdadmJuUXRabUZqWlNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCY0lrMXZiblJ6WlhKeVlYUmNJanRjYmlBZ2MzSmpPaUIxY213b1hDSXVMaTltYjI1MEwwMXZiblJ6WlhKeVlYUXRVbVZuZFd4aGNpNTNiMlptTWx3aUtTQm1iM0p0WVhRb1hDSjNiMlptTWx3aUtTd2dkWEpzS0Z3aUxpNHZabTl1ZEM5TmIyNTBjMlZ5Y21GMExWSmxaM1ZzWVhJdWQyOW1abHdpS1NCbWIzSnRZWFFvWENKM2IyWm1YQ0lwTENCMWNtd29YQ0l1TGk5bWIyNTBMMDF2Ym5SelpYSnlZWFF0VW1WbmRXeGhjaTUwZEdaY0lpa2dabTl5YldGMEtGd2lkSFJtWENJcExDQjFjbXdvWENJdUxpOW1iMjUwTDAxdmJuUnpaWEp5WVhRdFVtVm5kV3hoY2k1bGIzUmNJaWtnWm05eWJXRjBLRndpWlc5MFhDSXBPMXh1ZlZ4dVFHWnZiblF0Wm1GalpTQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQmNJazF2Ym5SelpYSnlZWFF0UW05c1pGd2lPMXh1SUNCemNtTTZJSFZ5YkNoY0lpNHVMMlp2Ym5RdlRXOXVkSE5sY25KaGRDMUNiMnhrTG5kdlptWXlYQ0lwSUdadmNtMWhkQ2hjSW5kdlptWXlYQ0lwTENCMWNtd29YQ0l1TGk5bWIyNTBMMDF2Ym5SelpYSnlZWFF0UW05c1pDNTNiMlptWENJcElHWnZjbTFoZENoY0luZHZabVpjSWlrc0lIVnliQ2hjSWk0dUwyWnZiblF2VFc5dWRITmxjbkpoZEMxQ2IyeGtMblIwWmx3aUtTQm1iM0p0WVhRb1hDSjBkR1pjSWlrc0lIVnliQ2hjSWk0dUwyWnZiblF2VFc5dWRITmxjbkpoZEMxQ2IyeGtMbVZ2ZEZ3aUtTQm1iM0p0WVhRb1hDSmxiM1JjSWlrN1hHNTlYRzVpYjJSNUlIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklGd2lUVzl1ZEhObGNuSmhkRndpTENCQmNtbGhiQ3dnU0dWc2RtVjBhV05oTENCellXNXpMWE5sY21sbU8xeHVJQ0JtYjI1MExYTnBlbVU2SURGeVpXMDdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhORFl1T0RjMUpUdGNiaUFnWW1GamEyZHliM1Z1WkRvZ0kyWm1aanRjYmlBZ1kyOXNiM0k2SUNNeU1USTBNMFE3WEc1OVhHNWNiaTV0Wlc1MUxXOXdaVzRnWW05a2VTQjdYRzRnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc1OVhHNWNiaTUzY21Gd2NHVnlJSHRjYmlBZ2IzWmxjbVpzYjNjNklHTnNhWEE3WEc0Z0lHMXBiaTFvWldsbmFIUTZJREV3TUNVN1hHNGdJR1JwYzNCc1lYazZJR2R5YVdRN1hHNGdJR2R5YVdRdGRHVnRjR3hoZEdVdGNtOTNjem9nWVhWMGJ5QXhabklnWVhWMGJ6dGNibjFjYmx4dVcyTnNZWE56S2oxZlgyTnZiblJoYVc1bGNsMGdlMXh1SUNCdFlYZ3RkMmxrZEdnNklEYzJMamczTlhKbGJUdGNiaUFnY0dGa1pHbHVaeTFwYm14cGJtVTZJREF1T1RNM05YSmxiVHRjYmlBZ2JXRnlaMmx1TFdsdWJHbHVaVG9nWVhWMGJ6dGNibjFjYmx4dWMyVmpkR2x2YmpwdWIzUW9PbXhoYzNRdFkyaHBiR1FwT201dmRDZzZabWx5YzNRdFkyaHBiR1FwSUh0Y2JpQWdiV0Z5WjJsdUxXSnNiMk5yT2lBNE1IQjRPMXh1ZlZ4dVhHNHVjMlZqZEdsdmJpMTBhWFJzWlNCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTkRCd2VEdGNiaUFnYldGeVoybHVMV0p2ZEhSdmJUb2dNekJ3ZUR0Y2JuMWNibHh1TG1KMGJpQjdYRzRnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F3TGpOek8xeHVJQ0JqYjJ4dmNqb2dJMlptWmp0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMFpHTmpRMk5EdGNiaUFnWW05eVpHVnlPaUF5Y0hnZ2MyOXNhV1FnSTBaR05qUTJORHRjYmlBZ2NHRmtaR2x1WnpvZ09IQjRJREl3Y0hnN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJSGRwWkhSb09pQnRZWGd0WTI5dWRHVnVkRHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTW5CNE8xeHVmVnh1TG1KMGJqcG9iM1psY2lCN1hHNGdJR052Ykc5eU9pQWpSa1kyTkRZME8xeHVJQ0JpWVdOclozSnZkVzVrT2lBalptWm1PMXh1ZlZ4dVhHNHVhR1ZoWkdWeUlIdGNiaUFnY0c5emFYUnBiMjQ2SUhOMGFXTnJlVHRjYmlBZ2RHOXdPaUF3TzF4dUlDQnNaV1owT2lBd08xeHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nSTJabVpqdGNibjFjYmk1b1pXRmtaWEpmWDJOdmJuUmhhVzVsY2lCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ2MzQmhZMlV0WW1WMGQyVmxianRjYmlBZ1oyRndPaUF4TlhCNE8xeHVJQ0J0YVc0dGFHVnBaMmgwT2lBNE1IQjRPMXh1ZlZ4dUxtaGxZV1JsY2w5ZmJHOW5ieUI3WEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnZWkxcGJtUmxlRG9nTVRBN1hHNTlYRzR1YUdWaFpHVnlYMTlzYjJkdklITjJaeUI3WEc0Z0lHaGxhV2RvZERvZ05qQndlRHRjYm4xY2JpNW9aV0ZrWlhKZlgyeHZaMjhnYzNabklHY2djR0YwYUNCN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXdMak56TzF4dWZWeHVMbWhsWVdSbGNsOWZiRzluYnlCemRtYzZhRzkyWlhJZ1p5QndZWFJvSUh0Y2JpQWdabWxzYkRvZ0kwWkdOalEyTkR0Y2JuMWNibHh1TG0xbGJuVmZYMnhwYzNRZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURFdU5YSmxiVHRjYmlBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNiaUFnWTI5c2RXMXVMV2RoY0RvZ05EQndlRHRjYmlBZ2NtOTNMV2RoY0RvZ05YQjRPMXh1SUNCbWJHVjRMWGR5WVhBNklIZHlZWEE3WEc1OVhHNHViV1Z1ZFY5ZmJHbHVheUI3WEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ2IzQmhZMmwwZVNBd0xqTnpMQ0JqYjJ4dmNpQXdMak56TzF4dWZWeHVMbTFsYm5WZlgyeHBibXM2T21GbWRHVnlJSHRjYmlBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0JqYjI1MFpXNTBPaUJjSWx3aU8xeHVJQ0JzWldaME9pQTFNQ1U3WEc0Z0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d0TlRBbEtUdGNiaUFnWW05MGRHOXRPaUF0TlhCNE8xeHVJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnZDJsa2RHZzZJREE3WEc0Z0lHaGxhV2RvZERvZ01uQjRPMXh1SUNCaVlXTnJaM0p2ZFc1a09pQWpSa1kyTkRZME8xeHVJQ0IwY21GdWMybDBhVzl1T2lBd0xqTnpPMXh1ZlZ4dUxtMWxiblZmWDJ4cGJtczZhRzkyWlhJZ2UxeHVJQ0JqYjJ4dmNqb2dJMFpHTmpRMk5EdGNiaUFnYjNCaFkybDBlVG9nTUM0M08xeHVmVnh1TG0xbGJuVmZYMnhwYm1zNmFHOTJaWEk2WVdaMFpYSWdlMXh1SUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnYjNCaFkybDBlVG9nTUM0M08xeHVmVnh1WEc0dWFXTnZiaTF0Wlc1MUlIdGNiaUFnWkdsemNHeGhlVG9nYm05dVpUdGNibjFjYmx4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEYzVOeTQ1T0hCNEtTQjdYRzRnSUM1dFpXNTFYMTlzYVhOMElIdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1E3WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdhR1ZwWjJoME9pQXhNREFsTzF4dUlDQWdJSFJ2Y0RvZ01EdGNiaUFnSUNCc1pXWjBPaUF0TVRBd0pUdGNiaUFnSUNCMGNtRnVjMmwwYVc5dU9pQnNaV1owSURBdU0zTTdYRzRnSUNBZ2NHRmtaR2x1WnpvZ01UQXdjSGdnTVRWd2VDQXlNSEI0SURFMWNIZzdYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0kwVkVSamRHUVR0Y2JpQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHVJQ0FnSUdkaGNEb2dNelZ3ZUR0Y2JpQWdJQ0J2ZG1WeVpteHZkem9nWVhWMGJ6dGNiaUFnZlZ4dUlDQXViV1Z1ZFY5ZmJHbHVheUI3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF6Tm5CNE8xeHVJQ0I5WEc0Z0lDNXRaVzUxWDE5c2FXNXJPanBoWm5SbGNpQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ2ZWeHVJQ0F1YldWdWRWOWZiR2x1YXpwb2IzWmxjaUI3WEc0Z0lDQWdiM0JoWTJsMGVUb2dNVHRjYmlBZ2ZWeHVJQ0F1YldWdWRTMXZjR1Z1SUM1dFpXNTFYMTlzYVhOMElIdGNiaUFnSUNCc1pXWjBPaUF3TzF4dUlDQjlYRzRnSUM1cFkyOXVMVzFsYm5VZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNCNkxXbHVaR1Y0T2lBeE1EdGNiaUFnSUNCM2FXUjBhRG9nTXpCd2VEdGNiaUFnSUNCb1pXbG5hSFE2SURFNGNIZzdYRzRnSUgxY2JpQWdMbWxqYjI0dGJXVnVkVjlmYkdsdVpTeGNiaTVwWTI5dUxXMWxiblU2T21KbFptOXlaU3hjYmk1cFkyOXVMVzFsYm5VNk9tRm1kR1Z5SUh0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjSWp0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqTURBd08xeHVJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUdobGFXZG9kRG9nTW5CNE8xeHVJQ0FnSUd4bFpuUTZJREE3WEc0Z0lDQWdkSEpoYm5OcGRHbHZiam9nTUM0emN6dGNiaUFnZlZ4dUlDQXVhV052YmkxdFpXNTFPanBpWldadmNtVWdlMXh1SUNBZ0lIUnZjRG9nTUR0Y2JpQWdmVnh1SUNBdWFXTnZiaTF0Wlc1MU9qcGhablJsY2lCN1hHNGdJQ0FnWW05MGRHOXRPaUF3TzF4dUlDQjlYRzRnSUM1cFkyOXVMVzFsYm5WZlgyeHBibVVnZTF4dUlDQWdJSFJ2Y0RvZ1kyRnNZeWcxTUNVZ0xTQXhjSGdwTzF4dUlDQjlYRzRnSUM1dFpXNTFMVzl3Wlc0Z0xtbGpiMjR0YldWdWRUbzZZbVZtYjNKbElIdGNiaUFnSUNCMGIzQTZJR05oYkdNb05UQWxJQzBnTVhCNEtUdGNiaUFnSUNCMGNtRnVjMlp2Y20wNklISnZkR0YwWlNndE5EVmtaV2NwTzF4dUlDQjlYRzRnSUM1dFpXNTFMVzl3Wlc0Z0xtbGpiMjR0YldWdWRUbzZZV1owWlhJZ2UxeHVJQ0FnSUdKdmRIUnZiVG9nWTJGc1l5ZzFNQ1VnTFNBeGNIZ3BPMXh1SUNBZ0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtEUTFaR1ZuS1R0Y2JpQWdmVnh1SUNBdWJXVnVkUzF2Y0dWdUlDNXBZMjl1TFcxbGJuVmZYMnhwYm1VZ2UxeHVJQ0FnSUd4bFpuUTZJRFV3SlR0Y2JpQWdJQ0IzYVdSMGFEb2dNRHRjYmlBZ2ZWeHVmVnh1TG1odmJXVWdhREVnZTF4dUlDQnRZWEpuYVc0NklEQTdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQmNJazF2Ym5SelpYSnlZWFF0UW05c1pGd2lMQ0JCY21saGJDd2djMlZ5YVdZN1hHNGdJR1p2Ym5RdGMybDZaVG9nWTJ4aGJYQW9NbkpsYlN3Z00zWjNJQ3NnTVhKbGJTd2dNaTQzTlhKbGJTazdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhNell1TXpZekpUdGNibjFjYmk1b2IyMWxYMTlqYjI1MFlXbHVaWElnZTF4dUlDQm9aV2xuYUhRNklHTmhiR01vTVRBd2RtZ2dMU0E0TUhCNEtUdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpjR0ZqWlMxaVpYUjNaV1Z1TzF4dWZWeHVMbWh2YldWZlgyTnZiblJsYm5RZ2UxeHVJQ0JtYkdWNE9pQXdJREVnTlRBbE8xeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHVJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNiaUFnWjJGd09pQTBNSEI0TzF4dWZWeHVMbWh2YldWZlgybHRaeUI3WEc0Z0lHWnNaWGc2SURBZ01TQXpNQ1U3WEc0Z0lHSnZjbVJsY2kxeVlXUnBkWE02SURVd0pUdGNibjFjYmk1b2IyMWxYMTlwYldjZ2FXMW5JSHRjYmlBZ2IySnFaV04wTFdacGREb2dZMjl1ZEdGcGJqdGNiaUFnYjJKcVpXTjBMWEJ2YzJsMGFXOXVPaUJqWlc1MFpYSTdYRzRnSUhkcFpIUm9PaUF4TURBbE8xeHVmVnh1WEc1QWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ056WTNMams0Y0hncElIdGNiaUFnTG1odmJXVmZYMk52Ym5SaGFXNWxjaUI3WEc0Z0lDQWdjR0ZrWkdsdVp5MWliRzlqYXpvZ01qQndlRHRjYmlBZ0lDQm1iR1Y0TFdScGNtVmpkR2x2YmpvZ1kyOXNkVzF1TFhKbGRtVnljMlU3WEc0Z0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQmpaVzUwWlhJN1hHNGdJQ0FnWjJGd09pQXlNSEI0TzF4dUlDQjlYRzRnSUM1b2IyMWxYMTlqYjI1MFpXNTBJSHRjYmlBZ0lDQm1iR1Y0T2lCdWIyNWxPMXh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNiaUFnSUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVJQ0FnSUdkaGNEb2dNalJ3ZUR0Y2JpQWdmVnh1SUNBdWFHOXRaVjlmYVcxbklIdGNiaUFnSUNCbWJHVjRPaUJ1YjI1bE8xeHVJQ0FnSUhkcFpIUm9PaUEyTkNVN1hHNGdJQ0FnYldGNExYZHBaSFJvT2lBek5qQndlRHRjYmlBZ2ZWeHVmVnh1UUhOMWNIQnZjblJ6SUNndGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNmJtOXVaU2w3WEc1Y2JuMWNibHh1SUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBM09UY3VPVGh3ZUNsN1hHNWNia0J6ZFhCd2IzSjBjeUFvTFhkbFltdHBkQzFoY0hCbFlYSmhibU5sT201dmJtVXBlMXh1WEc1OVhHNWNibjFjYmx4dUlFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQTNOamN1T1Rod2VDbDdYRzVjYmtCemRYQndiM0owY3lBb0xYZGxZbXRwZEMxaGNIQmxZWEpoYm1ObE9tNXZibVVwZTF4dVhHNTlYRzVjYm4xY2JpSXNJaTh2SUdadmJuUnpYRzVBWm05dWRDMW1ZV05sSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUNkTmIyNTBjMlZ5Y21GMEp6dGNiaUFnYzNKak9pQjFjbXdvSnk0dUwyWnZiblF2VFc5dWRITmxjbkpoZEMxU1pXZDFiR0Z5TG5kdlptWXlKeWtnWm05eWJXRjBLQ2QzYjJabU1pY3BMRnh1SUNBZ0lIVnliQ2duTGk0dlptOXVkQzlOYjI1MGMyVnljbUYwTFZKbFozVnNZWEl1ZDI5bVppY3BJR1p2Y20xaGRDZ25kMjltWmljcExGeHVJQ0FnSUhWeWJDZ25MaTR2Wm05dWRDOU5iMjUwYzJWeWNtRjBMVkpsWjNWc1lYSXVkSFJtSnlrZ1ptOXliV0YwS0NkMGRHWW5LU3hjYmlBZ0lDQjFjbXdvSnk0dUwyWnZiblF2VFc5dWRITmxjbkpoZEMxU1pXZDFiR0Z5TG1WdmRDY3BJR1p2Y20xaGRDZ25aVzkwSnlsY2JuMWNibHh1UUdadmJuUXRabUZqWlNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lBblRXOXVkSE5sY25KaGRDMUNiMnhrSnp0Y2JpQWdjM0pqT2lCMWNtd29KeTR1TDJadmJuUXZUVzl1ZEhObGNuSmhkQzFDYjJ4a0xuZHZabVl5SnlrZ1ptOXliV0YwS0NkM2IyWm1NaWNwTEZ4dUlDQWdJSFZ5YkNnbkxpNHZabTl1ZEM5TmIyNTBjMlZ5Y21GMExVSnZiR1F1ZDI5bVppY3BJR1p2Y20xaGRDZ25kMjltWmljcExGeHVJQ0FnSUhWeWJDZ25MaTR2Wm05dWRDOU5iMjUwYzJWeWNtRjBMVUp2YkdRdWRIUm1KeWtnWm05eWJXRjBLQ2QwZEdZbktTeGNiaUFnSUNCMWNtd29KeTR1TDJadmJuUXZUVzl1ZEhObGNuSmhkQzFDYjJ4a0xtVnZkQ2NwSUdadmNtMWhkQ2duWlc5MEp5bGNibjBpTENKQWFXMXdiM0owSUNkamJHVmhjaTV6WTNOekp6dGNia0JwYlhCdmNuUWdKMlp2Ym5SekxuTmpjM01uTzF4dVhHNHZMM1poY25OY2JpUmpiMnh2Y2kxaWJHRmphem9nSXpBd01EdGNiaVJqYjJ4dmNpMTNhR2wwWlRvZ0kyWm1aanRjYmlSamIyeHZjaTFzYVdkb2REb2dJMFZFUmpkR1FUdGNiaVJqYjJ4dmNpMWtZWEpyT2lBak1qRXlORE5FTzF4dUpHTnZiRzl5TFhSbGVIUXRiV0ZwYmpvZ0pHTnZiRzl5TFdSaGNtczdYRzRrWTI5c2IzSXRZV05qWlc1ME9pQWpSa1kyTkRZME8xeHVKR052Ym5SaGFXNWxjam9nTnpWeVpXMDdYRzRrWTI5dWRHRnBibVZ5TFhCaFpHUnBibWM2SURBdU9UTTNOWEpsYlR0Y2JpUm9aV0ZrWlhJdGFHVnBaMmgwT2lBNE1IQjRPMXh1WEc0dkwyMXBlR2x1YzF4dVhHNHZMMkpoYzJVZ2MzUjViR1Z6WEc1aWIyUjVJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ2ROYjI1MGMyVnljbUYwSnl3Z1FYSnBZV3dzSUVobGJIWmxkR2xqWVN3Z2MyRnVjeTF6WlhKcFpqdGNiaUFnWm05dWRDMXphWHBsT2lBeGNtVnRPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNVFEyTGpnM05TVTdYRzRnSUdKaFkydG5jbTkxYm1RNklDUmpiMnh2Y2kxM2FHbDBaVHRjYmlBZ1kyOXNiM0k2SUNSamIyeHZjaTEwWlhoMExXMWhhVzQ3WEc1OVhHNWNiaTV0Wlc1MUxXOXdaVzRnWW05a2VTQjdYRzRnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc1OVhHNWNiaTUzY21Gd2NHVnlJSHRjYmlBZ2IzWmxjbVpzYjNjNklHTnNhWEE3WEc0Z0lHMXBiaTFvWldsbmFIUTZJREV3TUNVN1hHNGdJR1JwYzNCc1lYazZJR2R5YVdRN1hHNGdJR2R5YVdRdGRHVnRjR3hoZEdVdGNtOTNjem9nWVhWMGJ5QXhabklnWVhWMGJ6dGNibjFjYmx4dVcyTnNZWE56S2owblgxOWpiMjUwWVdsdVpYSW5YU0I3WEc0Z0lHMWhlQzEzYVdSMGFEb2dZMkZzWXlna1kyOXVkR0ZwYm1WeUlDc2dNaW9rWTI5dWRHRnBibVZ5TFhCaFpHUnBibWNwTzF4dUlDQndZV1JrYVc1bkxXbHViR2x1WlRvZ0pHTnZiblJoYVc1bGNpMXdZV1JrYVc1bk8xeHVJQ0J0WVhKbmFXNHRhVzVzYVc1bE9pQmhkWFJ2TzF4dWZWeHVYRzV6WldOMGFXOXVPbTV2ZENnNmJHRnpkQzFqYUdsc1pDazZibTkwS0RwbWFYSnpkQzFqYUdsc1pDa2dlMXh1SUNCdFlYSm5hVzR0WW14dlkyczZJRGd3Y0hnN1hHNTlYRzVjYmk1elpXTjBhVzl1TFhScGRHeGxJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQTBNSEI0TzF4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBek1IQjRPMXh1ZlZ4dVhHNHVZblJ1SUh0Y2JpQWdkSEpoYm5OcGRHbHZiam9nWVd4c0lEQXVNM003WEc0Z0lHTnZiRzl5T2lBa1kyOXNiM0l0ZDJocGRHVTdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSamIyeHZjaTFoWTJObGJuUTdYRzRnSUdKdmNtUmxjam9nTW5CNElITnZiR2xrSUNSamIyeHZjaTFoWTJObGJuUTdYRzRnSUhCaFpHUnBibWM2SURod2VDQXlNSEI0TzF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQjNhV1IwYURvZ2JXRjRMV052Ym5SbGJuUTdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUR0Y2JseHVJQ0FtT21odmRtVnlJSHRjYmlBZ0lDQmpiMnh2Y2pvZ0pHTnZiRzl5TFdGalkyVnVkRHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUFrWTI5c2IzSXRkMmhwZEdVN1hHNGdJSDFjYm4xY2JseHVRR2x0Y0c5eWRDQmNJbUpzYjJOckwyaGxZV1JsY2k1elkzTnpYQ0k3WEc1QWFXMXdiM0owSUZ3aVlteHZZMnN2YUc5dFpTNXpZM056WENJN0lpd2lMbWhsWVdSbGNpQjdYRzRnSUhCdmMybDBhVzl1T2lCemRHbGphM2s3WEc0Z0lIUnZjRG9nTUR0Y2JpQWdiR1ZtZERvZ01EdGNiaUFnTHk4Z2VpMXBibVJsZURvZ05UQTdYRzRnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0JpWVdOclozSnZkVzVrT2lBa1kyOXNiM0l0ZDJocGRHVTdYRzVjYmlBZ0psOWZZMjl1ZEdGcGJtVnlJSHRjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpjR0ZqWlMxaVpYUjNaV1Z1TzF4dUlDQWdJR2RoY0RvZ01UVndlRHRjYmlBZ0lDQnRhVzR0YUdWcFoyaDBPaUFrYUdWaFpHVnlMV2hsYVdkb2REdGNiaUFnZlZ4dVhHNGdJQ1pmWDJ4dloyOGdlMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNCNkxXbHVaR1Y0T2lBeE1EdGNibHh1SUNBZ0lDWWdjM1puSUh0Y2JpQWdJQ0FnSUdobGFXZG9kRG9nTmpCd2VEdGNibHh1SUNBZ0lDQWdKaUJuSUhCaGRHZ2dlMXh1SUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dNQzR6Y3p0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0pqcG9iM1psY2lCbklIQmhkR2dnZTF4dUlDQWdJQ0FnSUNCbWFXeHNPaUFrWTI5c2IzSXRZV05qWlc1ME8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNWNiaTV0Wlc1MUlIdGNibHh1SUNBbVgxOXNhWE4wSUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFdU5YSmxiVHRjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lDQWdZMjlzZFcxdUxXZGhjRG9nTkRCd2VEdGNiaUFnSUNCeWIzY3RaMkZ3T2lBMWNIZzdYRzRnSUNBZ1pteGxlQzEzY21Gd09pQjNjbUZ3TzF4dUlDQjlYRzVjYmlBZ0psOWZiR2x1YXlCN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2SUc5d1lXTnBkSGtnTUM0emN5d2dZMjlzYjNJZ01DNHpjenRjYmx4dUlDQWdJQ1k2T21GbWRHVnlJSHRjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQWdJR052Ym5SbGJuUTZJQ2NuTzF4dUlDQWdJQ0FnYkdWbWREb2dOVEFsTzF4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtDMDFNQ1VwTzF4dUlDQWdJQ0FnWW05MGRHOXRPaUF0TlhCNE8xeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0IzYVdSMGFEb2dNRHRjYmlBZ0lDQWdJR2hsYVdkb2REb2dNbkI0TzF4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pHTnZiRzl5TFdGalkyVnVkRHRjYmlBZ0lDQWdJSFJ5WVc1emFYUnBiMjQ2SURBdU0zTTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0pqcG9iM1psY2lCN1hHNGdJQ0FnSUNCamIyeHZjam9nSkdOdmJHOXlMV0ZqWTJWdWREdGNiaUFnSUNBZ0lHOXdZV05wZEhrNklEQXVOenRjYmx4dUlDQWdJQ0FnSmpwaFpuUmxjaUI3WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUNBZ0lDQnZjR0ZqYVhSNU9pQXdMamM3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNTlYRzVjYmk1cFkyOXVJSHRjYmx4dUlDQW1MVzFsYm5VZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUgxY2JseHVYRzU5WEc1Y2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQTNPVGN1T1Rod2VDa2dlMXh1SUNBdWJXVnVkU0I3WEc0Z0lDQWdKbDlmYkdsemRDQjdYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2dabWw0WldRN1hHNGdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNBZ0lHaGxhV2RvZERvZ01UQXdKVHRjYmlBZ0lDQWdJSFJ2Y0RvZ01EdGNiaUFnSUNBZ0lHeGxablE2SUMweE1EQWxPMXh1SUNBZ0lDQWdkSEpoYm5OcGRHbHZiam9nYkdWbWRDQXdMak56TzF4dUlDQWdJQ0FnY0dGa1pHbHVaem9nTVRBd2NIZ2dNVFZ3ZUNBeU1IQjRJREUxY0hnN1hHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBa1kyOXNiM0l0YkdsbmFIUTdYRzRnSUNBZ0lDQm1iR1Y0TFdScGNtVmpkR2x2YmpvZ1kyOXNkVzF1TzF4dUlDQWdJQ0FnWjJGd09pQXpOWEI0TzF4dUlDQWdJQ0FnYjNabGNtWnNiM2M2SUdGMWRHODdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0psOWZiR2x1YXlCN1hHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklETTJjSGc3WEc1Y2JpQWdJQ0FnSUNZNk9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSmpwb2IzWmxjaUI3WEc0Z0lDQWdJQ0FnSUc5d1lXTnBkSGs2SURFN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0xtMWxiblV0YjNCbGJpQXViV1Z1ZFY5ZmJHbHpkQ0I3WEc0Z0lDQWdiR1ZtZERvZ01EdGNiaUFnZlZ4dVhHNGdJQzVwWTI5dUxXMWxiblVnZTF4dUlDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0I2TFdsdVpHVjRPaUF4TUR0Y2JpQWdJQ0IzYVdSMGFEb2dNekJ3ZUR0Y2JpQWdJQ0JvWldsbmFIUTZJREU0Y0hnN1hHNGdJSDFjYmx4dUlDQXVhV052YmkxdFpXNTFYMTlzYVc1bExGeHVJQ0F1YVdOdmJpMXRaVzUxT2pwaVpXWnZjbVVzWEc0Z0lDNXBZMjl1TFcxbGJuVTZPbUZtZEdWeUlIdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnWTI5dWRHVnVkRG9nSnljN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSkdOdmJHOXlMV0pzWVdOck8xeHVJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUdobGFXZG9kRG9nTW5CNE8xeHVJQ0FnSUd4bFpuUTZJREE3WEc0Z0lDQWdkSEpoYm5OcGRHbHZiam9nTUM0emN6dGNiaUFnZlZ4dVhHNWNiaUFnTG1samIyNHRiV1Z1ZFRvNlltVm1iM0psSUh0Y2JpQWdJQ0IwYjNBNklEQTdYRzRnSUgxY2JseHVJQ0F1YVdOdmJpMXRaVzUxT2pwaFpuUmxjaUI3WEc0Z0lDQWdZbTkwZEc5dE9pQXdPMXh1SUNCOVhHNWNiaUFnTG1samIyNHRiV1Z1ZFY5ZmJHbHVaU0I3WEc0Z0lDQWdkRzl3T2lCallXeGpLRFV3SlNBdElERndlQ2s3WEc0Z0lIMWNibHh1SUNBdWJXVnVkUzF2Y0dWdUlIdGNiaUFnSUNBbUlDNXBZMjl1TFcxbGJuVTZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQjBiM0E2SUdOaGJHTW9OVEFsSUMwZ01YQjRLVHRjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLQzAwTldSbFp5azdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0ppQXVhV052YmkxdFpXNTFPanBoWm5SbGNpQjdYRzRnSUNBZ0lDQmliM1IwYjIwNklHTmhiR01vTlRBbElDMGdNWEI0S1R0Y2JpQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RRMVpHVm5LVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQW1JQzVwWTI5dUxXMWxiblZmWDJ4cGJtVWdlMXh1SUNBZ0lDQWdiR1ZtZERvZ05UQWxPMXh1SUNBZ0lDQWdkMmxrZEdnNklEQTdYRzRnSUNBZ2ZWeHVYRzRnSUgxY2JuMGlMQ0l1YUc5dFpTQjdYRzRnSUNZZ2FERWdlMXh1SUNBZ0lHMWhjbWRwYmpvZ01EdGNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dKMDF2Ym5SelpYSnlZWFF0UW05c1pDY3NJRUZ5YVdGc0xDQnpaWEpwWmp0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SUdOc1lXMXdLREp5Wlcwc0lETjJkeUFySURGeVpXMHNJREl1TnpWeVpXMHBPMXh1SUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TXpZdU16WXpKVHRjYmlBZ2ZWeHVYRzRnSUNaZlgyTnZiblJoYVc1bGNpQjdYRzRnSUNBZ2FHVnBaMmgwT2lCRFlXeGpLREV3TUhab0lDMGdKR2hsWVdSbGNpMW9aV2xuYUhRcE8xeHVJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNiaUFnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYRzRnSUgxY2JseHVJQ0FtWDE5amIyNTBaVzUwSUh0Y2JpQWdJQ0JtYkdWNE9pQXdJREVnTlRBbE8xeHVJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ1pteGxlQzFrYVhKbFkzUnBiMjQ2SUdOdmJIVnRianRjYmlBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklHTmxiblJsY2p0Y2JpQWdJQ0JuWVhBNklEUXdjSGc3WEc0Z0lIMWNibHh1SUNBbVgxOXBiV2NnZTF4dUlDQWdJR1pzWlhnNklEQWdNU0F6TUNVN1hHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dOVEFsTzF4dVhHNGdJQ0FnSmlCcGJXY2dlMXh1SUNBZ0lDQWdiMkpxWldOMExXWnBkRG9nWTI5dWRHRnBianRjYmlBZ0lDQWdJRzlpYW1WamRDMXdiM05wZEdsdmJqb2dZMlZ1ZEdWeU8xeHVJQ0FnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUEzTmpjdU9UaHdlQ2tnZTF4dUlDQXVhRzl0WlNCN1hHNGdJQ0FnSmw5ZlkyOXVkR0ZwYm1WeUlIdGNiaUFnSUNBZ0lDOHZJSEJoWkdScGJtY3RkRzl3T2lCallXeGpLREl3Y0hnZ0t5QWthR1ZoWkdWeUxXaGxhV2RvZENrN1hHNGdJQ0FnSUNCd1lXUmthVzVuTFdKc2IyTnJPaUF5TUhCNE8xeHVJQ0FnSUNBZ1pteGxlQzFrYVhKbFkzUnBiMjQ2SUdOdmJIVnRiaTF5WlhabGNuTmxPMXh1SUNBZ0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQmpaVzUwWlhJN1hHNGdJQ0FnSUNCbllYQTZJREl3Y0hnN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmw5ZlkyOXVkR1Z1ZENCN1hHNGdJQ0FnSUNCbWJHVjRPaUJ1YjI1bE8xeHVJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0FnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNiaUFnSUNBZ0lHZGhjRG9nTWpSd2VEdGNiaUFnSUNCOVhHNWNiaUFnSUNBbVgxOXBiV2NnZTF4dUlDQWdJQ0FnWm14bGVEb2dibTl1WlR0Y2JpQWdJQ0FnSUhkcFpIUm9PaUEyTkNVN1hHNGdJQ0FnSUNCdFlYZ3RkMmxrZEdnNklETTJNSEI0TzF4dUlDQWdJSDFjYmlBZ2ZWeHVmU0pkZlE9PSAqLyIsIkBpbXBvcnQgJ2NsZWFyLnNjc3MnO1xuQGltcG9ydCAnZm9udHMuc2Nzcyc7XG5cbi8vdmFyc1xuJGNvbG9yLWJsYWNrOiAjMDAwO1xuJGNvbG9yLXdoaXRlOiAjZmZmO1xuJGNvbG9yLWxpZ2h0OiAjRURGN0ZBO1xuJGNvbG9yLWRhcms6ICMyMTI0M0Q7XG4kY29sb3ItdGV4dC1tYWluOiAkY29sb3ItZGFyaztcbiRjb2xvci1hY2NlbnQ6ICNGRjY0NjQ7XG4kY29udGFpbmVyOiA3NXJlbTtcbiRjb250YWluZXItcGFkZGluZzogMC45Mzc1cmVtO1xuJGhlYWRlci1oZWlnaHQ6IDgwcHg7XG5cbi8vbWl4aW5zXG5cbi8vYmFzZSBzdHlsZXNcbmJvZHkge1xuICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDFyZW07XG4gIGxpbmUtaGVpZ2h0OiAxNDYuODc1JTtcbiAgYmFja2dyb3VuZDogJGNvbG9yLXdoaXRlO1xuICBjb2xvcjogJGNvbG9yLXRleHQtbWFpbjtcbn1cblxuLm1lbnUtb3BlbiBib2R5IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLndyYXBwZXIge1xuICBvdmVyZmxvdzogY2xpcDtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIDFmciBhdXRvO1xufVxuXG5bY2xhc3MqPSdfX2NvbnRhaW5lciddIHtcbiAgbWF4LXdpZHRoOiBjYWxjKCRjb250YWluZXIgKyAyKiRjb250YWluZXItcGFkZGluZyk7XG4gIHBhZGRpbmctaW5saW5lOiAkY29udGFpbmVyLXBhZGRpbmc7XG4gIG1hcmdpbi1pbmxpbmU6IGF1dG87XG59XG5cbnNlY3Rpb246bm90KDpsYXN0LWNoaWxkKTpub3QoOmZpcnN0LWNoaWxkKSB7XG4gIG1hcmdpbi1ibG9jazogODBweDtcbn1cblxuLnNlY3Rpb24tdGl0bGUge1xuICBmb250LXNpemU6IDQwcHg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG5cbi5idG4ge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgY29sb3I6ICRjb2xvci13aGl0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWFjY2VudDtcbiAgYm9yZGVyOiAycHggc29saWQgJGNvbG9yLWFjY2VudDtcbiAgcGFkZGluZzogOHB4IDIwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiBtYXgtY29udGVudDtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiAkY29sb3ItYWNjZW50O1xuICAgIGJhY2tncm91bmQ6ICRjb2xvci13aGl0ZTtcbiAgfVxufVxuXG5AaW1wb3J0IFwiYmxvY2svaGVhZGVyLnNjc3NcIjtcbkBpbXBvcnQgXCJibG9jay9ob21lLnNjc3NcIjsiLCIqLFxuKjo6YWZ0ZXIsXG4qOjpiZWZvcmUge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiBpbmhlcml0O1xufVxuXG51bCxcbm9sLFxubGkge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5pbWcge1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG5odG1sIHtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG59XG5cbmh0bWwsXG5ib2R5IHtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3JkZXI6IG5vbmU7XG59XG5cbmJ1dHRvbixcbmlucHV0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LVJlZ3VsYXIudHRmXCIpIGZvcm1hdChcInR0ZlwiKSwgdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LVJlZ3VsYXIuZW90XCIpIGZvcm1hdChcImVvdFwiKTtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0LUJvbGRcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQtQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQtQm9sZC50dGZcIikgZm9ybWF0KFwidHRmXCIpLCB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQtQm9sZC5lb3RcIikgZm9ybWF0KFwiZW90XCIpO1xufVxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBsaW5lLWhlaWdodDogMTQ2Ljg3NSU7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGNvbG9yOiAjMjEyNDNEO1xufVxuXG4ubWVudS1vcGVuIGJvZHkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4ud3JhcHBlciB7XG4gIG92ZXJmbG93OiBjbGlwO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gMWZyIGF1dG87XG59XG5cbltjbGFzcyo9X19jb250YWluZXJdIHtcbiAgbWF4LXdpZHRoOiA3Ni44NzVyZW07XG4gIHBhZGRpbmctaW5saW5lOiAwLjkzNzVyZW07XG4gIG1hcmdpbi1pbmxpbmU6IGF1dG87XG59XG5cbnNlY3Rpb246bm90KDpsYXN0LWNoaWxkKTpub3QoOmZpcnN0LWNoaWxkKSB7XG4gIG1hcmdpbi1ibG9jazogODBweDtcbn1cblxuLnNlY3Rpb24tdGl0bGUge1xuICBmb250LXNpemU6IDQwcHg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG5cbi5idG4ge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRjY0NjQ7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNGRjY0NjQ7XG4gIHBhZGRpbmc6IDhweCAyMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogbWF4LWNvbnRlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbn1cbi5idG46aG92ZXIge1xuICBjb2xvcjogI0ZGNjQ2NDtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbn1cblxuLmhlYWRlciB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59XG4uaGVhZGVyX19jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGdhcDogMTVweDtcbiAgbWluLWhlaWdodDogODBweDtcbn1cbi5oZWFkZXJfX2xvZ28ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDEwO1xufVxuLmhlYWRlcl9fbG9nbyBzdmcge1xuICBoZWlnaHQ6IDYwcHg7XG59XG4uaGVhZGVyX19sb2dvIHN2ZyBnIHBhdGgge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbn1cbi5oZWFkZXJfX2xvZ28gc3ZnOmhvdmVyIGcgcGF0aCB7XG4gIGZpbGw6ICNGRjY0NjQ7XG59XG5cbi5tZW51X19saXN0IHtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbHVtbi1nYXA6IDQwcHg7XG4gIHJvdy1nYXA6IDVweDtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuLm1lbnVfX2xpbmsge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcywgY29sb3IgMC4zcztcbn1cbi5tZW51X19saW5rOjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogXCJcIjtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIGJvdHRvbTogLTVweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAwO1xuICBoZWlnaHQ6IDJweDtcbiAgYmFja2dyb3VuZDogI0ZGNjQ2NDtcbiAgdHJhbnNpdGlvbjogMC4zcztcbn1cbi5tZW51X19saW5rOmhvdmVyIHtcbiAgY29sb3I6ICNGRjY0NjQ7XG4gIG9wYWNpdHk6IDAuNztcbn1cbi5tZW51X19saW5rOmhvdmVyOmFmdGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG9wYWNpdHk6IDAuNztcbn1cblxuLmljb24tbWVudSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3OTcuOThweCkge1xuICAubWVudV9fbGlzdCB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogLTEwMCU7XG4gICAgdHJhbnNpdGlvbjogbGVmdCAwLjNzO1xuICAgIHBhZGRpbmc6IDEwMHB4IDE1cHggMjBweCAxNXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNFREY3RkE7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDM1cHg7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gIH1cbiAgLm1lbnVfX2xpbmsge1xuICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgfVxuICAubWVudV9fbGluazo6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLm1lbnVfX2xpbms6aG92ZXIge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgLm1lbnUtb3BlbiAubWVudV9fbGlzdCB7XG4gICAgbGVmdDogMDtcbiAgfVxuICAuaWNvbi1tZW51IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMTA7XG4gICAgd2lkdGg6IDMwcHg7XG4gICAgaGVpZ2h0OiAxOHB4O1xuICB9XG4gIC5pY29uLW1lbnVfX2xpbmUsXG4uaWNvbi1tZW51OjpiZWZvcmUsXG4uaWNvbi1tZW51OjphZnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDJweDtcbiAgICBsZWZ0OiAwO1xuICAgIHRyYW5zaXRpb246IDAuM3M7XG4gIH1cbiAgLmljb24tbWVudTo6YmVmb3JlIHtcbiAgICB0b3A6IDA7XG4gIH1cbiAgLmljb24tbWVudTo6YWZ0ZXIge1xuICAgIGJvdHRvbTogMDtcbiAgfVxuICAuaWNvbi1tZW51X19saW5lIHtcbiAgICB0b3A6IGNhbGMoNTAlIC0gMXB4KTtcbiAgfVxuICAubWVudS1vcGVuIC5pY29uLW1lbnU6OmJlZm9yZSB7XG4gICAgdG9wOiBjYWxjKDUwJSAtIDFweCk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgfVxuICAubWVudS1vcGVuIC5pY29uLW1lbnU6OmFmdGVyIHtcbiAgICBib3R0b206IGNhbGMoNTAlIC0gMXB4KTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gIH1cbiAgLm1lbnUtb3BlbiAuaWNvbi1tZW51X19saW5lIHtcbiAgICBsZWZ0OiA1MCU7XG4gICAgd2lkdGg6IDA7XG4gIH1cbn1cbi5ob21lIGgxIHtcbiAgbWFyZ2luOiAwO1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0LUJvbGRcIiwgQXJpYWwsIHNlcmlmO1xuICBmb250LXNpemU6IGNsYW1wKDJyZW0sIDN2dyArIDFyZW0sIDIuNzVyZW0pO1xuICBsaW5lLWhlaWdodDogMTM2LjM2MyU7XG59XG4uaG9tZV9fY29udGFpbmVyIHtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gODBweCk7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cbi5ob21lX19jb250ZW50IHtcbiAgZmxleDogMCAxIDUwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGdhcDogNDBweDtcbn1cbi5ob21lX19pbWcge1xuICBmbGV4OiAwIDEgMzAlO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG59XG4uaG9tZV9faW1nIGltZyB7XG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XG4gIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2Ny45OHB4KSB7XG4gIC5ob21lX19jb250YWluZXIge1xuICAgIHBhZGRpbmctYmxvY2s6IDIwcHg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGdhcDogMjBweDtcbiAgfVxuICAuaG9tZV9fY29udGVudCB7XG4gICAgZmxleDogbm9uZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDI0cHg7XG4gIH1cbiAgLmhvbWVfX2ltZyB7XG4gICAgZmxleDogbm9uZTtcbiAgICB3aWR0aDogNjQlO1xuICAgIG1heC13aWR0aDogMzYwcHg7XG4gIH1cbn1cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbiBAbWVkaWEgKG1heC13aWR0aDogNzk3Ljk4cHgpe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG5cbiBAbWVkaWEgKG1heC13aWR0aDogNzY3Ljk4cHgpe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG4iLCIvLyBmb250c1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCc7XG4gIHNyYzogdXJsKCcuLi9mb250L01vbnRzZXJyYXQtUmVndWxhci53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcbiAgICB1cmwoJy4uL2ZvbnQvTW9udHNlcnJhdC1SZWd1bGFyLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICB1cmwoJy4uL2ZvbnQvTW9udHNlcnJhdC1SZWd1bGFyLnR0ZicpIGZvcm1hdCgndHRmJyksXG4gICAgdXJsKCcuLi9mb250L01vbnRzZXJyYXQtUmVndWxhci5lb3QnKSBmb3JtYXQoJ2VvdCcpXG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQtQm9sZCc7XG4gIHNyYzogdXJsKCcuLi9mb250L01vbnRzZXJyYXQtQm9sZC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcbiAgICB1cmwoJy4uL2ZvbnQvTW9udHNlcnJhdC1Cb2xkLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICB1cmwoJy4uL2ZvbnQvTW9udHNlcnJhdC1Cb2xkLnR0ZicpIGZvcm1hdCgndHRmJyksXG4gICAgdXJsKCcuLi9mb250L01vbnRzZXJyYXQtQm9sZC5lb3QnKSBmb3JtYXQoJ2VvdCcpXG59IiwiLmhlYWRlciB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgLy8gei1pbmRleDogNTA7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kOiAkY29sb3Itd2hpdGU7XG5cbiAgJl9fY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGdhcDogMTVweDtcbiAgICBtaW4taGVpZ2h0OiAkaGVhZGVyLWhlaWdodDtcbiAgfVxuXG4gICZfX2xvZ28ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxMDtcblxuICAgICYgc3ZnIHtcbiAgICAgIGhlaWdodDogNjBweDtcblxuICAgICAgJiBnIHBhdGgge1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgICAgIH1cblxuICAgICAgJjpob3ZlciBnIHBhdGgge1xuICAgICAgICBmaWxsOiAkY29sb3ItYWNjZW50O1xuICAgICAgfVxuXG4gICAgfVxuICB9XG59XG5cbi5tZW51IHtcblxuICAmX19saXN0IHtcbiAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgY29sdW1uLWdhcDogNDBweDtcbiAgICByb3ctZ2FwOiA1cHg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICB9XG5cbiAgJl9fbGluayB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcywgY29sb3IgMC4zcztcblxuICAgICY6OmFmdGVyIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgICAgYm90dG9tOiAtNXB4O1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB3aWR0aDogMDtcbiAgICAgIGhlaWdodDogMnB4O1xuICAgICAgYmFja2dyb3VuZDogJGNvbG9yLWFjY2VudDtcbiAgICAgIHRyYW5zaXRpb246IDAuM3M7XG4gICAgfVxuXG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogJGNvbG9yLWFjY2VudDtcbiAgICAgIG9wYWNpdHk6IDAuNztcblxuICAgICAgJjphZnRlciB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBvcGFjaXR5OiAwLjc7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi5pY29uIHtcblxuICAmLW1lbnUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuXG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3OTcuOThweCkge1xuICAubWVudSB7XG4gICAgJl9fbGlzdCB7XG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IC0xMDAlO1xuICAgICAgdHJhbnNpdGlvbjogbGVmdCAwLjNzO1xuICAgICAgcGFkZGluZzogMTAwcHggMTVweCAyMHB4IDE1cHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItbGlnaHQ7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgZ2FwOiAzNXB4O1xuICAgICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgfVxuXG4gICAgJl9fbGluayB7XG4gICAgICBmb250LXNpemU6IDM2cHg7XG5cbiAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLm1lbnUtb3BlbiAubWVudV9fbGlzdCB7XG4gICAgbGVmdDogMDtcbiAgfVxuXG4gIC5pY29uLW1lbnUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxMDtcbiAgICB3aWR0aDogMzBweDtcbiAgICBoZWlnaHQ6IDE4cHg7XG4gIH1cblxuICAuaWNvbi1tZW51X19saW5lLFxuICAuaWNvbi1tZW51OjpiZWZvcmUsXG4gIC5pY29uLW1lbnU6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY29udGVudDogJyc7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWJsYWNrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMnB4O1xuICAgIGxlZnQ6IDA7XG4gICAgdHJhbnNpdGlvbjogMC4zcztcbiAgfVxuXG5cbiAgLmljb24tbWVudTo6YmVmb3JlIHtcbiAgICB0b3A6IDA7XG4gIH1cblxuICAuaWNvbi1tZW51OjphZnRlciB7XG4gICAgYm90dG9tOiAwO1xuICB9XG5cbiAgLmljb24tbWVudV9fbGluZSB7XG4gICAgdG9wOiBjYWxjKDUwJSAtIDFweCk7XG4gIH1cblxuICAubWVudS1vcGVuIHtcbiAgICAmIC5pY29uLW1lbnU6OmJlZm9yZSB7XG4gICAgICB0b3A6IGNhbGMoNTAlIC0gMXB4KTtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgfVxuXG4gICAgJiAuaWNvbi1tZW51OjphZnRlciB7XG4gICAgICBib3R0b206IGNhbGMoNTAlIC0gMXB4KTtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICB9XG5cbiAgICAmIC5pY29uLW1lbnVfX2xpbmUge1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgd2lkdGg6IDA7XG4gICAgfVxuXG4gIH1cbn0iLCIuaG9tZSB7XG4gICYgaDEge1xuICAgIG1hcmdpbjogMDtcbiAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQtQm9sZCcsIEFyaWFsLCBzZXJpZjtcbiAgICBmb250LXNpemU6IGNsYW1wKDJyZW0sIDN2dyArIDFyZW0sIDIuNzVyZW0pO1xuICAgIGxpbmUtaGVpZ2h0OiAxMzYuMzYzJTtcbiAgfVxuXG4gICZfX2NvbnRhaW5lciB7XG4gICAgaGVpZ2h0OiBDYWxjKDEwMHZoIC0gJGhlYWRlci1oZWlnaHQpO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cblxuICAmX19jb250ZW50IHtcbiAgICBmbGV4OiAwIDEgNTAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBnYXA6IDQwcHg7XG4gIH1cblxuICAmX19pbWcge1xuICAgIGZsZXg6IDAgMSAzMCU7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuXG4gICAgJiBpbWcge1xuICAgICAgb2JqZWN0LWZpdDogY29udGFpbjtcbiAgICAgIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkge1xuICAuaG9tZSB7XG4gICAgJl9fY29udGFpbmVyIHtcbiAgICAgIC8vIHBhZGRpbmctdG9wOiBjYWxjKDIwcHggKyAkaGVhZGVyLWhlaWdodCk7XG4gICAgICBwYWRkaW5nLWJsb2NrOiAyMHB4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBnYXA6IDIwcHg7XG4gICAgfVxuXG4gICAgJl9fY29udGVudCB7XG4gICAgICBmbGV4OiBub25lO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGdhcDogMjRweDtcbiAgICB9XG5cbiAgICAmX19pbWcge1xuICAgICAgZmxleDogbm9uZTtcbiAgICAgIHdpZHRoOiA2NCU7XG4gICAgICBtYXgtd2lkdGg6IDM2MHB4O1xuICAgIH1cbiAgfVxufSJdfQ== */