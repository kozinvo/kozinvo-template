*,::after,::before{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box}a{text-decoration:none;color:inherit}li,ol,ul{list-style:none}img{vertical-align:top}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}body,html{line-height:1;height:100%}html{scroll-behavior:smooth}body{font:1rem/146.875% "Montserrat",Arial,Helvetica,sans-serif;background:#fff;color:#21243d}button{background:inherit;cursor:pointer;border:0}button,input,textarea{font:inherit inherit inherit;color:inherit}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Regular.woff2) format("woff2"),url(../font/Montserrat-Regular.woff) format("woff"),url(../font/Montserrat-Regular.ttf) format("ttf"),url(../font/Montserrat-Regular.eot) format("eot")}@font-face{font-family:"Montserrat-Bold";src:url(../font/Montserrat-Bold.woff2) format("woff2"),url(../font/Montserrat-Bold.woff) format("woff"),url(../font/Montserrat-Bold.ttf) format("ttf"),url(../font/Montserrat-Bold.eot) format("eot")}.menu-open body{overflow:hidden}.wrapper{overflow:clip;min-height:100%;display:grid;grid-template-rows:auto 1fr auto}[class*=__container]{max-width:76.875rem;padding-inline:.9375rem;margin-inline:auto}section:not(:last-child):not(:first-child){margin-bottom:80px}.section-title{font-size:40px;margin-bottom:30px}.btn{background:#ff6464;-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s;color:#fff;border:2px solid #ff6464;padding:8px 20px;display:-webkit-box;display:-ms-flexbox;display:flex;width:-webkit-max-content;width:-moz-max-content;width:max-content;border-radius:2px}.btn:hover{color:#ff6464;background:#fff}.header{position:sticky;top:0;left:0;z-index:50;width:100%;background:#fff}.header__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:15px;min-height:80px}.header__logo{position:relative;z-index:10}.header__logo svg{height:60px}.header__logo svg g path{-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s}.header__logo svg:hover g path{fill:#ff6464}.menu__list{font-size:1.5rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-column-gap:40px;-moz-column-gap:40px;column-gap:40px;row-gap:5px;-ms-flex-wrap:wrap;flex-wrap:wrap}.menu__link{position:relative;-webkit-transition:opacity .3s,color .3s;-o-transition:opacity .3s,color .3s;transition:opacity .3s,color .3s}.menu__link::after{position:absolute;content:"";left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);bottom:-5px;display:block;width:0;height:2px;background:#ff6464;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.menu__link:hover{color:#ff6464;opacity:.7}.menu__link:hover:after{width:100%;opacity:.7}.icon-menu{display:none}.home h1{font:clamp(2rem,3vw + 1rem,2.75rem)/136.363% "Montserrat-Bold",Arial,serif;margin:0}.home__container,.home__content{display:-webkit-box;display:-ms-flexbox;display:flex}.home__container{height:calc(100vh - 80px);-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.home__content{-webkit-box-flex:0;-ms-flex:0 1 50%;flex:0 1 50%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:40px}.home__img{-webkit-box-flex:0;-ms-flex:0 1 30%;flex:0 1 30%;border-radius:50%}.home__img img{-o-object-fit:contain;object-fit:contain;-o-object-position:center;object-position:center;width:100%}.skills{background:#edf7fa;padding-block:80px}.skills__wrapper{display:grid;grid-template-columns:repeat(auto-fill,minmax(min(100%,280px),1fr));grid-auto-rows:-webkit-max-content;grid-auto-rows:max-content;gap:2rem}.skill{background:#fff;border-radius:8px;padding:20px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;row-gap:12px;text-align:center;-webkit-transition:-webkit-box-shadow .3s;-o-transition:box-shadow .3s;transition:box-shadow .3s;transition:box-shadow .3s,-webkit-box-shadow .3s;overflow:hidden}.skill:hover{-webkit-box-shadow:0 10px 15px -3px rgba(0,0,0,.1);box-shadow:0 10px 15px -3px rgba(0,0,0,.1)}.skill__title{font:1.5rem "Montserrat-Bold",serif}.skill__progress{height:140px;width:140px;background:conic-gradient(#ff6464 3.6deg,#edf7fa 0deg);-ms-flex-item-align:center;align-self:center;border-radius:50%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;font-size:30px}.skill__progress::before{background:#fff;content:"";position:absolute;height:100px;width:100px;border-radius:50%}.skill__progress,.skill__progress span{position:relative}.skill__info{overflow:hidden;-webkit-transition:.3s;-o-transition:.3s;transition:.3s;-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%);opacity:0}.skill:hover .skill__info{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);opacity:1}@media (max-width:797.98px){.menu__list{position:fixed;width:100%;height:100%;top:0;left:-100%;-webkit-transition:left .3s;-o-transition:left .3s;transition:left .3s;padding:100px 15px 20px;background-color:#edf7fa;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:35px;overflow:auto}.menu__link{font-size:36px}.menu__link::after{display:none}.menu__link:hover{opacity:1}.menu-open .menu__list{left:0}.icon-menu{display:block;position:relative;z-index:10;width:30px;height:18px}.icon-menu::after,.icon-menu::before,.icon-menu__line{position:absolute;content:"";background-color:#000;width:100%;height:2px;left:0;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.icon-menu::before{top:0}.icon-menu::after{bottom:0}.icon-menu__line{top:calc(50% - 1px)}.menu-open .icon-menu::before{top:calc(50% - 1px);-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg)}.menu-open .icon-menu::after{bottom:calc(50% - 1px);-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.menu-open .icon-menu__line{left:50%;width:0}}@media (max-width:767.98px){.home__container{padding-block:20px;-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:20px}.home__content,.home__img{-webkit-box-flex:0;-ms-flex:none;flex:none}.home__content{text-align:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:24px}.home__img{width:64%;max-width:360px}}@media (hover:none){.skill__info{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);opacity:1}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */